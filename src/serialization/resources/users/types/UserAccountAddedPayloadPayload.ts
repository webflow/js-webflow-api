/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Webflow from "../../../../api/index";
import * as core from "../../../../core";
import { UserAccountAddedPayloadPayloadData } from "./UserAccountAddedPayloadPayloadData";
import { UserStatus } from "../../../types/UserStatus";
import { UserAccessGroupsItem } from "../../../types/UserAccessGroupsItem";

export const UserAccountAddedPayloadPayload: core.serialization.ObjectSchema<
    serializers.UserAccountAddedPayloadPayload.Raw,
    Webflow.UserAccountAddedPayloadPayload
> = core.serialization.object({
    data: UserAccountAddedPayloadPayloadData.optional(),
    id: core.serialization.string().optional(),
    isEmailVerified: core.serialization.boolean().optional(),
    lastUpdated: core.serialization.date().optional(),
    invitedOn: core.serialization.date().optional(),
    createdOn: core.serialization.date().optional(),
    lastLogin: core.serialization.date().optional(),
    status: UserStatus.optional(),
    accessGroups: core.serialization.list(UserAccessGroupsItem).optional(),
});

export declare namespace UserAccountAddedPayloadPayload {
    interface Raw {
        data?: UserAccountAddedPayloadPayloadData.Raw | null;
        id?: string | null;
        isEmailVerified?: boolean | null;
        lastUpdated?: string | null;
        invitedOn?: string | null;
        createdOn?: string | null;
        lastLogin?: string | null;
        status?: UserStatus.Raw | null;
        accessGroups?: UserAccessGroupsItem.Raw[] | null;
    }
}
