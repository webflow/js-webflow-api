/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Webflow from "../../../../api/index";
import * as core from "../../../../core";
import { ProductsUpdateRequestProductFieldDataSkuPropertiesItem } from "./ProductsUpdateRequestProductFieldDataSkuPropertiesItem";
import { ProductsUpdateRequestProductFieldDataTaxCategory } from "./ProductsUpdateRequestProductFieldDataTaxCategory";
import { ProductsUpdateRequestProductFieldDataEcProductType } from "./ProductsUpdateRequestProductFieldDataEcProductType";

export const ProductsUpdateRequestProductFieldData: core.serialization.ObjectSchema<
    serializers.ProductsUpdateRequestProductFieldData.Raw,
    Webflow.ProductsUpdateRequestProductFieldData
> = core.serialization.object({
    name: core.serialization.string().optional(),
    slug: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    shippable: core.serialization.boolean().optional(),
    skuProperties: core.serialization.property(
        "sku-properties",
        core.serialization.list(ProductsUpdateRequestProductFieldDataSkuPropertiesItem).optional()
    ),
    categories: core.serialization.list(core.serialization.string()).optional(),
    taxCategory: core.serialization.property(
        "tax-category",
        ProductsUpdateRequestProductFieldDataTaxCategory.optional()
    ),
    defaultSku: core.serialization.property("default-sku", core.serialization.string().optional()),
    ecProductType: core.serialization.property(
        "ec-product-type",
        ProductsUpdateRequestProductFieldDataEcProductType.optional()
    ),
});

export declare namespace ProductsUpdateRequestProductFieldData {
    interface Raw {
        name?: string | null;
        slug?: string | null;
        description?: string | null;
        shippable?: boolean | null;
        "sku-properties"?: ProductsUpdateRequestProductFieldDataSkuPropertiesItem.Raw[] | null;
        categories?: string[] | null;
        "tax-category"?: ProductsUpdateRequestProductFieldDataTaxCategory.Raw | null;
        "default-sku"?: string | null;
        "ec-product-type"?: ProductsUpdateRequestProductFieldDataEcProductType.Raw | null;
    }
}
