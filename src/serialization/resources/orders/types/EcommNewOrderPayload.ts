/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Webflow from "../../../../api/index";
import * as core from "../../../../core";
import { EcommNewOrderPayloadStatus } from "./EcommNewOrderPayloadStatus";
import { EcommNewOrderPayloadDisputeLastStatus } from "./EcommNewOrderPayloadDisputeLastStatus";
import { EcommNewOrderPayloadCustomerPaid } from "./EcommNewOrderPayloadCustomerPaid";
import { EcommNewOrderPayloadNetAmount } from "./EcommNewOrderPayloadNetAmount";
import { EcommNewOrderPayloadApplicationFee } from "./EcommNewOrderPayloadApplicationFee";
import { EcommNewOrderPayloadAllAddressesItem } from "./EcommNewOrderPayloadAllAddressesItem";
import { EcommNewOrderPayloadShippingAddress } from "./EcommNewOrderPayloadShippingAddress";
import { EcommNewOrderPayloadBillingAddress } from "./EcommNewOrderPayloadBillingAddress";
import { EcommNewOrderPayloadCustomerInfo } from "./EcommNewOrderPayloadCustomerInfo";
import { EcommNewOrderPayloadPurchasedItemsItem } from "./EcommNewOrderPayloadPurchasedItemsItem";
import { EcommNewOrderPayloadStripeDetails } from "./EcommNewOrderPayloadStripeDetails";
import { EcommNewOrderPayloadStripeCard } from "./EcommNewOrderPayloadStripeCard";
import { EcommNewOrderPayloadPaypalDetails } from "./EcommNewOrderPayloadPaypalDetails";
import { EcommNewOrderPayloadMetadata } from "./EcommNewOrderPayloadMetadata";
import { EcommNewOrderPayloadTotals } from "./EcommNewOrderPayloadTotals";
import { EcommNewOrderPayloadDownloadFilesItem } from "./EcommNewOrderPayloadDownloadFilesItem";

export const EcommNewOrderPayload: core.serialization.ObjectSchema<
    serializers.EcommNewOrderPayload.Raw,
    Webflow.EcommNewOrderPayload
> = core.serialization.object({
    orderId: core.serialization.string().optional(),
    status: EcommNewOrderPayloadStatus.optional(),
    comment: core.serialization.string().optional(),
    orderComment: core.serialization.string().optional(),
    acceptedOn: core.serialization.date().optional(),
    fulfilledOn: core.serialization.date().optional(),
    refundedOn: core.serialization.date().optional(),
    disputedOn: core.serialization.date().optional(),
    disputeUpdatedOn: core.serialization.date().optional(),
    disputeLastStatus: EcommNewOrderPayloadDisputeLastStatus.optional(),
    customerPaid: EcommNewOrderPayloadCustomerPaid.optional(),
    netAmount: EcommNewOrderPayloadNetAmount.optional(),
    applicationFee: EcommNewOrderPayloadApplicationFee.optional(),
    allAddresses: core.serialization.list(EcommNewOrderPayloadAllAddressesItem).optional(),
    shippingAddress: EcommNewOrderPayloadShippingAddress.optional(),
    billingAddress: EcommNewOrderPayloadBillingAddress.optional(),
    shippingProvider: core.serialization.string().optional(),
    shippingTracking: core.serialization.string().optional(),
    shippingTrackingUrl: core.serialization.property("shippingTrackingURL", core.serialization.string().optional()),
    customerInfo: EcommNewOrderPayloadCustomerInfo.optional(),
    purchasedItems: core.serialization.list(EcommNewOrderPayloadPurchasedItemsItem).optional(),
    purchasedItemsCount: core.serialization.number().optional(),
    stripeDetails: EcommNewOrderPayloadStripeDetails.optional(),
    stripeCard: EcommNewOrderPayloadStripeCard.optional(),
    paypalDetails: EcommNewOrderPayloadPaypalDetails.optional(),
    customData: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
    metadata: EcommNewOrderPayloadMetadata.optional(),
    isCustomerDeleted: core.serialization.boolean().optional(),
    isShippingRequired: core.serialization.boolean().optional(),
    hasDownloads: core.serialization.boolean().optional(),
    paymentProcessor: core.serialization.string().optional(),
    totals: EcommNewOrderPayloadTotals.optional(),
    downloadFiles: core.serialization.list(EcommNewOrderPayloadDownloadFilesItem).optional(),
});

export declare namespace EcommNewOrderPayload {
    interface Raw {
        orderId?: string | null;
        status?: EcommNewOrderPayloadStatus.Raw | null;
        comment?: string | null;
        orderComment?: string | null;
        acceptedOn?: string | null;
        fulfilledOn?: string | null;
        refundedOn?: string | null;
        disputedOn?: string | null;
        disputeUpdatedOn?: string | null;
        disputeLastStatus?: EcommNewOrderPayloadDisputeLastStatus.Raw | null;
        customerPaid?: EcommNewOrderPayloadCustomerPaid.Raw | null;
        netAmount?: EcommNewOrderPayloadNetAmount.Raw | null;
        applicationFee?: EcommNewOrderPayloadApplicationFee.Raw | null;
        allAddresses?: EcommNewOrderPayloadAllAddressesItem.Raw[] | null;
        shippingAddress?: EcommNewOrderPayloadShippingAddress.Raw | null;
        billingAddress?: EcommNewOrderPayloadBillingAddress.Raw | null;
        shippingProvider?: string | null;
        shippingTracking?: string | null;
        shippingTrackingURL?: string | null;
        customerInfo?: EcommNewOrderPayloadCustomerInfo.Raw | null;
        purchasedItems?: EcommNewOrderPayloadPurchasedItemsItem.Raw[] | null;
        purchasedItemsCount?: number | null;
        stripeDetails?: EcommNewOrderPayloadStripeDetails.Raw | null;
        stripeCard?: EcommNewOrderPayloadStripeCard.Raw | null;
        paypalDetails?: EcommNewOrderPayloadPaypalDetails.Raw | null;
        customData?: Record<string, unknown>[] | null;
        metadata?: EcommNewOrderPayloadMetadata.Raw | null;
        isCustomerDeleted?: boolean | null;
        isShippingRequired?: boolean | null;
        hasDownloads?: boolean | null;
        paymentProcessor?: string | null;
        totals?: EcommNewOrderPayloadTotals.Raw | null;
        downloadFiles?: EcommNewOrderPayloadDownloadFilesItem.Raw[] | null;
    }
}
