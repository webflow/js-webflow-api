/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Webflow from "../../../../api/index";
import * as core from "../../../../core";
import { OrdersUpdateFulfillResponseStatus } from "./OrdersUpdateFulfillResponseStatus";
import { OrdersUpdateFulfillResponseDisputeLastStatus } from "./OrdersUpdateFulfillResponseDisputeLastStatus";
import { OrdersUpdateFulfillResponseCustomerPaid } from "./OrdersUpdateFulfillResponseCustomerPaid";
import { OrdersUpdateFulfillResponseNetAmount } from "./OrdersUpdateFulfillResponseNetAmount";
import { OrdersUpdateFulfillResponseApplicationFee } from "./OrdersUpdateFulfillResponseApplicationFee";
import { OrdersUpdateFulfillResponseAllAddressesItem } from "./OrdersUpdateFulfillResponseAllAddressesItem";
import { OrdersUpdateFulfillResponseShippingAddress } from "./OrdersUpdateFulfillResponseShippingAddress";
import { OrdersUpdateFulfillResponseBillingAddress } from "./OrdersUpdateFulfillResponseBillingAddress";
import { OrdersUpdateFulfillResponseCustomerInfo } from "./OrdersUpdateFulfillResponseCustomerInfo";
import { OrdersUpdateFulfillResponsePurchasedItemsItem } from "./OrdersUpdateFulfillResponsePurchasedItemsItem";
import { OrdersUpdateFulfillResponseStripeDetails } from "./OrdersUpdateFulfillResponseStripeDetails";
import { OrdersUpdateFulfillResponseStripeCard } from "./OrdersUpdateFulfillResponseStripeCard";
import { OrdersUpdateFulfillResponsePaypalDetails } from "./OrdersUpdateFulfillResponsePaypalDetails";
import { OrdersUpdateFulfillResponseMetadata } from "./OrdersUpdateFulfillResponseMetadata";
import { OrdersUpdateFulfillResponseTotals } from "./OrdersUpdateFulfillResponseTotals";
import { OrdersUpdateFulfillResponseDownloadFilesItem } from "./OrdersUpdateFulfillResponseDownloadFilesItem";

export const OrdersUpdateFulfillResponse: core.serialization.ObjectSchema<
    serializers.OrdersUpdateFulfillResponse.Raw,
    Webflow.OrdersUpdateFulfillResponse
> = core.serialization.object({
    orderId: core.serialization.string().optional(),
    status: OrdersUpdateFulfillResponseStatus.optional(),
    comment: core.serialization.string().optional(),
    orderComment: core.serialization.string().optional(),
    acceptedOn: core.serialization.date().optional(),
    fulfilledOn: core.serialization.date().optional(),
    refundedOn: core.serialization.date().optional(),
    disputedOn: core.serialization.date().optional(),
    disputeUpdatedOn: core.serialization.date().optional(),
    disputeLastStatus: OrdersUpdateFulfillResponseDisputeLastStatus.optional(),
    customerPaid: OrdersUpdateFulfillResponseCustomerPaid.optional(),
    netAmount: OrdersUpdateFulfillResponseNetAmount.optional(),
    applicationFee: OrdersUpdateFulfillResponseApplicationFee.optional(),
    allAddresses: core.serialization.list(OrdersUpdateFulfillResponseAllAddressesItem).optional(),
    shippingAddress: OrdersUpdateFulfillResponseShippingAddress.optional(),
    billingAddress: OrdersUpdateFulfillResponseBillingAddress.optional(),
    shippingProvider: core.serialization.string().optional(),
    shippingTracking: core.serialization.string().optional(),
    shippingTrackingUrl: core.serialization.property("shippingTrackingURL", core.serialization.string().optional()),
    customerInfo: OrdersUpdateFulfillResponseCustomerInfo.optional(),
    purchasedItems: core.serialization.list(OrdersUpdateFulfillResponsePurchasedItemsItem).optional(),
    purchasedItemsCount: core.serialization.number().optional(),
    stripeDetails: OrdersUpdateFulfillResponseStripeDetails.optional(),
    stripeCard: OrdersUpdateFulfillResponseStripeCard.optional(),
    paypalDetails: OrdersUpdateFulfillResponsePaypalDetails.optional(),
    customData: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
    metadata: OrdersUpdateFulfillResponseMetadata.optional(),
    isCustomerDeleted: core.serialization.boolean().optional(),
    isShippingRequired: core.serialization.boolean().optional(),
    hasDownloads: core.serialization.boolean().optional(),
    paymentProcessor: core.serialization.string().optional(),
    totals: OrdersUpdateFulfillResponseTotals.optional(),
    downloadFiles: core.serialization.list(OrdersUpdateFulfillResponseDownloadFilesItem).optional(),
});

export declare namespace OrdersUpdateFulfillResponse {
    interface Raw {
        orderId?: string | null;
        status?: OrdersUpdateFulfillResponseStatus.Raw | null;
        comment?: string | null;
        orderComment?: string | null;
        acceptedOn?: string | null;
        fulfilledOn?: string | null;
        refundedOn?: string | null;
        disputedOn?: string | null;
        disputeUpdatedOn?: string | null;
        disputeLastStatus?: OrdersUpdateFulfillResponseDisputeLastStatus.Raw | null;
        customerPaid?: OrdersUpdateFulfillResponseCustomerPaid.Raw | null;
        netAmount?: OrdersUpdateFulfillResponseNetAmount.Raw | null;
        applicationFee?: OrdersUpdateFulfillResponseApplicationFee.Raw | null;
        allAddresses?: OrdersUpdateFulfillResponseAllAddressesItem.Raw[] | null;
        shippingAddress?: OrdersUpdateFulfillResponseShippingAddress.Raw | null;
        billingAddress?: OrdersUpdateFulfillResponseBillingAddress.Raw | null;
        shippingProvider?: string | null;
        shippingTracking?: string | null;
        shippingTrackingURL?: string | null;
        customerInfo?: OrdersUpdateFulfillResponseCustomerInfo.Raw | null;
        purchasedItems?: OrdersUpdateFulfillResponsePurchasedItemsItem.Raw[] | null;
        purchasedItemsCount?: number | null;
        stripeDetails?: OrdersUpdateFulfillResponseStripeDetails.Raw | null;
        stripeCard?: OrdersUpdateFulfillResponseStripeCard.Raw | null;
        paypalDetails?: OrdersUpdateFulfillResponsePaypalDetails.Raw | null;
        customData?: Record<string, unknown>[] | null;
        metadata?: OrdersUpdateFulfillResponseMetadata.Raw | null;
        isCustomerDeleted?: boolean | null;
        isShippingRequired?: boolean | null;
        hasDownloads?: boolean | null;
        paymentProcessor?: string | null;
        totals?: OrdersUpdateFulfillResponseTotals.Raw | null;
        downloadFiles?: OrdersUpdateFulfillResponseDownloadFilesItem.Raw[] | null;
    }
}
