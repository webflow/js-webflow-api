/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Webflow from "../../../../api/index";
import * as core from "../../../../core";
import { OrdersListResponseOrdersItemStatus } from "./OrdersListResponseOrdersItemStatus";
import { OrdersListResponseOrdersItemDisputeLastStatus } from "./OrdersListResponseOrdersItemDisputeLastStatus";
import { OrdersListResponseOrdersItemCustomerPaid } from "./OrdersListResponseOrdersItemCustomerPaid";
import { OrdersListResponseOrdersItemNetAmount } from "./OrdersListResponseOrdersItemNetAmount";
import { OrdersListResponseOrdersItemApplicationFee } from "./OrdersListResponseOrdersItemApplicationFee";
import { OrdersListResponseOrdersItemAllAddressesItem } from "./OrdersListResponseOrdersItemAllAddressesItem";
import { OrdersListResponseOrdersItemShippingAddress } from "./OrdersListResponseOrdersItemShippingAddress";
import { OrdersListResponseOrdersItemBillingAddress } from "./OrdersListResponseOrdersItemBillingAddress";
import { OrdersListResponseOrdersItemCustomerInfo } from "./OrdersListResponseOrdersItemCustomerInfo";
import { OrdersListResponseOrdersItemPurchasedItemsItem } from "./OrdersListResponseOrdersItemPurchasedItemsItem";
import { OrdersListResponseOrdersItemStripeDetails } from "./OrdersListResponseOrdersItemStripeDetails";
import { OrdersListResponseOrdersItemStripeCard } from "./OrdersListResponseOrdersItemStripeCard";
import { OrdersListResponseOrdersItemPaypalDetails } from "./OrdersListResponseOrdersItemPaypalDetails";
import { OrdersListResponseOrdersItemMetadata } from "./OrdersListResponseOrdersItemMetadata";
import { OrdersListResponseOrdersItemTotals } from "./OrdersListResponseOrdersItemTotals";
import { OrdersListResponseOrdersItemDownloadFilesItem } from "./OrdersListResponseOrdersItemDownloadFilesItem";

export const OrdersListResponseOrdersItem: core.serialization.ObjectSchema<
    serializers.OrdersListResponseOrdersItem.Raw,
    Webflow.OrdersListResponseOrdersItem
> = core.serialization.object({
    orderId: core.serialization.string().optional(),
    status: OrdersListResponseOrdersItemStatus.optional(),
    comment: core.serialization.string().optional(),
    orderComment: core.serialization.string().optional(),
    acceptedOn: core.serialization.date().optional(),
    fulfilledOn: core.serialization.date().optional(),
    refundedOn: core.serialization.date().optional(),
    disputedOn: core.serialization.date().optional(),
    disputeUpdatedOn: core.serialization.date().optional(),
    disputeLastStatus: OrdersListResponseOrdersItemDisputeLastStatus.optional(),
    customerPaid: OrdersListResponseOrdersItemCustomerPaid.optional(),
    netAmount: OrdersListResponseOrdersItemNetAmount.optional(),
    applicationFee: OrdersListResponseOrdersItemApplicationFee.optional(),
    allAddresses: core.serialization.list(OrdersListResponseOrdersItemAllAddressesItem).optional(),
    shippingAddress: OrdersListResponseOrdersItemShippingAddress.optional(),
    billingAddress: OrdersListResponseOrdersItemBillingAddress.optional(),
    shippingProvider: core.serialization.string().optional(),
    shippingTracking: core.serialization.string().optional(),
    shippingTrackingUrl: core.serialization.property("shippingTrackingURL", core.serialization.string().optional()),
    customerInfo: OrdersListResponseOrdersItemCustomerInfo.optional(),
    purchasedItems: core.serialization.list(OrdersListResponseOrdersItemPurchasedItemsItem).optional(),
    purchasedItemsCount: core.serialization.number().optional(),
    stripeDetails: OrdersListResponseOrdersItemStripeDetails.optional(),
    stripeCard: OrdersListResponseOrdersItemStripeCard.optional(),
    paypalDetails: OrdersListResponseOrdersItemPaypalDetails.optional(),
    customData: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
    metadata: OrdersListResponseOrdersItemMetadata.optional(),
    isCustomerDeleted: core.serialization.boolean().optional(),
    isShippingRequired: core.serialization.boolean().optional(),
    hasDownloads: core.serialization.boolean().optional(),
    paymentProcessor: core.serialization.string().optional(),
    totals: OrdersListResponseOrdersItemTotals.optional(),
    downloadFiles: core.serialization.list(OrdersListResponseOrdersItemDownloadFilesItem).optional(),
});

export declare namespace OrdersListResponseOrdersItem {
    interface Raw {
        orderId?: string | null;
        status?: OrdersListResponseOrdersItemStatus.Raw | null;
        comment?: string | null;
        orderComment?: string | null;
        acceptedOn?: string | null;
        fulfilledOn?: string | null;
        refundedOn?: string | null;
        disputedOn?: string | null;
        disputeUpdatedOn?: string | null;
        disputeLastStatus?: OrdersListResponseOrdersItemDisputeLastStatus.Raw | null;
        customerPaid?: OrdersListResponseOrdersItemCustomerPaid.Raw | null;
        netAmount?: OrdersListResponseOrdersItemNetAmount.Raw | null;
        applicationFee?: OrdersListResponseOrdersItemApplicationFee.Raw | null;
        allAddresses?: OrdersListResponseOrdersItemAllAddressesItem.Raw[] | null;
        shippingAddress?: OrdersListResponseOrdersItemShippingAddress.Raw | null;
        billingAddress?: OrdersListResponseOrdersItemBillingAddress.Raw | null;
        shippingProvider?: string | null;
        shippingTracking?: string | null;
        shippingTrackingURL?: string | null;
        customerInfo?: OrdersListResponseOrdersItemCustomerInfo.Raw | null;
        purchasedItems?: OrdersListResponseOrdersItemPurchasedItemsItem.Raw[] | null;
        purchasedItemsCount?: number | null;
        stripeDetails?: OrdersListResponseOrdersItemStripeDetails.Raw | null;
        stripeCard?: OrdersListResponseOrdersItemStripeCard.Raw | null;
        paypalDetails?: OrdersListResponseOrdersItemPaypalDetails.Raw | null;
        customData?: Record<string, unknown>[] | null;
        metadata?: OrdersListResponseOrdersItemMetadata.Raw | null;
        isCustomerDeleted?: boolean | null;
        isShippingRequired?: boolean | null;
        hasDownloads?: boolean | null;
        paymentProcessor?: string | null;
        totals?: OrdersListResponseOrdersItemTotals.Raw | null;
        downloadFiles?: OrdersListResponseOrdersItemDownloadFilesItem.Raw[] | null;
    }
}
