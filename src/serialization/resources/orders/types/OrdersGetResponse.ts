/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Webflow from "../../../../api/index";
import * as core from "../../../../core";
import { OrdersGetResponseStatus } from "./OrdersGetResponseStatus";
import { OrdersGetResponseDisputeLastStatus } from "./OrdersGetResponseDisputeLastStatus";
import { OrdersGetResponseCustomerPaid } from "./OrdersGetResponseCustomerPaid";
import { OrdersGetResponseNetAmount } from "./OrdersGetResponseNetAmount";
import { OrdersGetResponseApplicationFee } from "./OrdersGetResponseApplicationFee";
import { OrdersGetResponseAllAddressesItem } from "./OrdersGetResponseAllAddressesItem";
import { OrdersGetResponseShippingAddress } from "./OrdersGetResponseShippingAddress";
import { OrdersGetResponseBillingAddress } from "./OrdersGetResponseBillingAddress";
import { OrdersGetResponseCustomerInfo } from "./OrdersGetResponseCustomerInfo";
import { OrdersGetResponsePurchasedItemsItem } from "./OrdersGetResponsePurchasedItemsItem";
import { OrdersGetResponseStripeDetails } from "./OrdersGetResponseStripeDetails";
import { OrdersGetResponseStripeCard } from "./OrdersGetResponseStripeCard";
import { OrdersGetResponsePaypalDetails } from "./OrdersGetResponsePaypalDetails";
import { OrdersGetResponseMetadata } from "./OrdersGetResponseMetadata";
import { OrdersGetResponseTotals } from "./OrdersGetResponseTotals";
import { OrdersGetResponseDownloadFilesItem } from "./OrdersGetResponseDownloadFilesItem";

export const OrdersGetResponse: core.serialization.ObjectSchema<
    serializers.OrdersGetResponse.Raw,
    Webflow.OrdersGetResponse
> = core.serialization.object({
    orderId: core.serialization.string().optional(),
    status: OrdersGetResponseStatus.optional(),
    comment: core.serialization.string().optional(),
    orderComment: core.serialization.string().optional(),
    acceptedOn: core.serialization.date().optional(),
    fulfilledOn: core.serialization.date().optional(),
    refundedOn: core.serialization.date().optional(),
    disputedOn: core.serialization.date().optional(),
    disputeUpdatedOn: core.serialization.date().optional(),
    disputeLastStatus: OrdersGetResponseDisputeLastStatus.optional(),
    customerPaid: OrdersGetResponseCustomerPaid.optional(),
    netAmount: OrdersGetResponseNetAmount.optional(),
    applicationFee: OrdersGetResponseApplicationFee.optional(),
    allAddresses: core.serialization.list(OrdersGetResponseAllAddressesItem).optional(),
    shippingAddress: OrdersGetResponseShippingAddress.optional(),
    billingAddress: OrdersGetResponseBillingAddress.optional(),
    shippingProvider: core.serialization.string().optional(),
    shippingTracking: core.serialization.string().optional(),
    shippingTrackingUrl: core.serialization.property("shippingTrackingURL", core.serialization.string().optional()),
    customerInfo: OrdersGetResponseCustomerInfo.optional(),
    purchasedItems: core.serialization.list(OrdersGetResponsePurchasedItemsItem).optional(),
    purchasedItemsCount: core.serialization.number().optional(),
    stripeDetails: OrdersGetResponseStripeDetails.optional(),
    stripeCard: OrdersGetResponseStripeCard.optional(),
    paypalDetails: OrdersGetResponsePaypalDetails.optional(),
    customData: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
    metadata: OrdersGetResponseMetadata.optional(),
    isCustomerDeleted: core.serialization.boolean().optional(),
    isShippingRequired: core.serialization.boolean().optional(),
    hasDownloads: core.serialization.boolean().optional(),
    paymentProcessor: core.serialization.string().optional(),
    totals: OrdersGetResponseTotals.optional(),
    downloadFiles: core.serialization.list(OrdersGetResponseDownloadFilesItem).optional(),
});

export declare namespace OrdersGetResponse {
    interface Raw {
        orderId?: string | null;
        status?: OrdersGetResponseStatus.Raw | null;
        comment?: string | null;
        orderComment?: string | null;
        acceptedOn?: string | null;
        fulfilledOn?: string | null;
        refundedOn?: string | null;
        disputedOn?: string | null;
        disputeUpdatedOn?: string | null;
        disputeLastStatus?: OrdersGetResponseDisputeLastStatus.Raw | null;
        customerPaid?: OrdersGetResponseCustomerPaid.Raw | null;
        netAmount?: OrdersGetResponseNetAmount.Raw | null;
        applicationFee?: OrdersGetResponseApplicationFee.Raw | null;
        allAddresses?: OrdersGetResponseAllAddressesItem.Raw[] | null;
        shippingAddress?: OrdersGetResponseShippingAddress.Raw | null;
        billingAddress?: OrdersGetResponseBillingAddress.Raw | null;
        shippingProvider?: string | null;
        shippingTracking?: string | null;
        shippingTrackingURL?: string | null;
        customerInfo?: OrdersGetResponseCustomerInfo.Raw | null;
        purchasedItems?: OrdersGetResponsePurchasedItemsItem.Raw[] | null;
        purchasedItemsCount?: number | null;
        stripeDetails?: OrdersGetResponseStripeDetails.Raw | null;
        stripeCard?: OrdersGetResponseStripeCard.Raw | null;
        paypalDetails?: OrdersGetResponsePaypalDetails.Raw | null;
        customData?: Record<string, unknown>[] | null;
        metadata?: OrdersGetResponseMetadata.Raw | null;
        isCustomerDeleted?: boolean | null;
        isShippingRequired?: boolean | null;
        hasDownloads?: boolean | null;
        paymentProcessor?: string | null;
        totals?: OrdersGetResponseTotals.Raw | null;
        downloadFiles?: OrdersGetResponseDownloadFilesItem.Raw[] | null;
    }
}
