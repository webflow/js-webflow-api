/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Webflow from "../../../../api/index";
import * as core from "../../../../core";
import { OrdersRefundResponseStatus } from "./OrdersRefundResponseStatus";
import { OrdersRefundResponseDisputeLastStatus } from "./OrdersRefundResponseDisputeLastStatus";
import { OrdersRefundResponseCustomerPaid } from "./OrdersRefundResponseCustomerPaid";
import { OrdersRefundResponseNetAmount } from "./OrdersRefundResponseNetAmount";
import { OrdersRefundResponseApplicationFee } from "./OrdersRefundResponseApplicationFee";
import { OrdersRefundResponseAllAddressesItem } from "./OrdersRefundResponseAllAddressesItem";
import { OrdersRefundResponseShippingAddress } from "./OrdersRefundResponseShippingAddress";
import { OrdersRefundResponseBillingAddress } from "./OrdersRefundResponseBillingAddress";
import { OrdersRefundResponseCustomerInfo } from "./OrdersRefundResponseCustomerInfo";
import { OrdersRefundResponsePurchasedItemsItem } from "./OrdersRefundResponsePurchasedItemsItem";
import { OrdersRefundResponseStripeDetails } from "./OrdersRefundResponseStripeDetails";
import { OrdersRefundResponseStripeCard } from "./OrdersRefundResponseStripeCard";
import { OrdersRefundResponsePaypalDetails } from "./OrdersRefundResponsePaypalDetails";
import { OrdersRefundResponseMetadata } from "./OrdersRefundResponseMetadata";
import { OrdersRefundResponseTotals } from "./OrdersRefundResponseTotals";
import { OrdersRefundResponseDownloadFilesItem } from "./OrdersRefundResponseDownloadFilesItem";

export const OrdersRefundResponse: core.serialization.ObjectSchema<
    serializers.OrdersRefundResponse.Raw,
    Webflow.OrdersRefundResponse
> = core.serialization.object({
    orderId: core.serialization.string().optional(),
    status: OrdersRefundResponseStatus.optional(),
    comment: core.serialization.string().optional(),
    orderComment: core.serialization.string().optional(),
    acceptedOn: core.serialization.date().optional(),
    fulfilledOn: core.serialization.date().optional(),
    refundedOn: core.serialization.date().optional(),
    disputedOn: core.serialization.date().optional(),
    disputeUpdatedOn: core.serialization.date().optional(),
    disputeLastStatus: OrdersRefundResponseDisputeLastStatus.optional(),
    customerPaid: OrdersRefundResponseCustomerPaid.optional(),
    netAmount: OrdersRefundResponseNetAmount.optional(),
    applicationFee: OrdersRefundResponseApplicationFee.optional(),
    allAddresses: core.serialization.list(OrdersRefundResponseAllAddressesItem).optional(),
    shippingAddress: OrdersRefundResponseShippingAddress.optional(),
    billingAddress: OrdersRefundResponseBillingAddress.optional(),
    shippingProvider: core.serialization.string().optional(),
    shippingTracking: core.serialization.string().optional(),
    shippingTrackingUrl: core.serialization.property("shippingTrackingURL", core.serialization.string().optional()),
    customerInfo: OrdersRefundResponseCustomerInfo.optional(),
    purchasedItems: core.serialization.list(OrdersRefundResponsePurchasedItemsItem).optional(),
    purchasedItemsCount: core.serialization.number().optional(),
    stripeDetails: OrdersRefundResponseStripeDetails.optional(),
    stripeCard: OrdersRefundResponseStripeCard.optional(),
    paypalDetails: OrdersRefundResponsePaypalDetails.optional(),
    customData: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
    metadata: OrdersRefundResponseMetadata.optional(),
    isCustomerDeleted: core.serialization.boolean().optional(),
    isShippingRequired: core.serialization.boolean().optional(),
    hasDownloads: core.serialization.boolean().optional(),
    paymentProcessor: core.serialization.string().optional(),
    totals: OrdersRefundResponseTotals.optional(),
    downloadFiles: core.serialization.list(OrdersRefundResponseDownloadFilesItem).optional(),
});

export declare namespace OrdersRefundResponse {
    interface Raw {
        orderId?: string | null;
        status?: OrdersRefundResponseStatus.Raw | null;
        comment?: string | null;
        orderComment?: string | null;
        acceptedOn?: string | null;
        fulfilledOn?: string | null;
        refundedOn?: string | null;
        disputedOn?: string | null;
        disputeUpdatedOn?: string | null;
        disputeLastStatus?: OrdersRefundResponseDisputeLastStatus.Raw | null;
        customerPaid?: OrdersRefundResponseCustomerPaid.Raw | null;
        netAmount?: OrdersRefundResponseNetAmount.Raw | null;
        applicationFee?: OrdersRefundResponseApplicationFee.Raw | null;
        allAddresses?: OrdersRefundResponseAllAddressesItem.Raw[] | null;
        shippingAddress?: OrdersRefundResponseShippingAddress.Raw | null;
        billingAddress?: OrdersRefundResponseBillingAddress.Raw | null;
        shippingProvider?: string | null;
        shippingTracking?: string | null;
        shippingTrackingURL?: string | null;
        customerInfo?: OrdersRefundResponseCustomerInfo.Raw | null;
        purchasedItems?: OrdersRefundResponsePurchasedItemsItem.Raw[] | null;
        purchasedItemsCount?: number | null;
        stripeDetails?: OrdersRefundResponseStripeDetails.Raw | null;
        stripeCard?: OrdersRefundResponseStripeCard.Raw | null;
        paypalDetails?: OrdersRefundResponsePaypalDetails.Raw | null;
        customData?: Record<string, unknown>[] | null;
        metadata?: OrdersRefundResponseMetadata.Raw | null;
        isCustomerDeleted?: boolean | null;
        isShippingRequired?: boolean | null;
        hasDownloads?: boolean | null;
        paymentProcessor?: string | null;
        totals?: OrdersRefundResponseTotals.Raw | null;
        downloadFiles?: OrdersRefundResponseDownloadFilesItem.Raw[] | null;
    }
}
