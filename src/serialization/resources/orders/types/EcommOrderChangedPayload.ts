/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Webflow from "../../../../api/index";
import * as core from "../../../../core";
import { EcommOrderChangedPayloadStatus } from "./EcommOrderChangedPayloadStatus";
import { EcommOrderChangedPayloadDisputeLastStatus } from "./EcommOrderChangedPayloadDisputeLastStatus";
import { EcommOrderChangedPayloadCustomerPaid } from "./EcommOrderChangedPayloadCustomerPaid";
import { EcommOrderChangedPayloadNetAmount } from "./EcommOrderChangedPayloadNetAmount";
import { EcommOrderChangedPayloadApplicationFee } from "./EcommOrderChangedPayloadApplicationFee";
import { EcommOrderChangedPayloadAllAddressesItem } from "./EcommOrderChangedPayloadAllAddressesItem";
import { EcommOrderChangedPayloadShippingAddress } from "./EcommOrderChangedPayloadShippingAddress";
import { EcommOrderChangedPayloadBillingAddress } from "./EcommOrderChangedPayloadBillingAddress";
import { EcommOrderChangedPayloadCustomerInfo } from "./EcommOrderChangedPayloadCustomerInfo";
import { EcommOrderChangedPayloadPurchasedItemsItem } from "./EcommOrderChangedPayloadPurchasedItemsItem";
import { EcommOrderChangedPayloadStripeDetails } from "./EcommOrderChangedPayloadStripeDetails";
import { EcommOrderChangedPayloadStripeCard } from "./EcommOrderChangedPayloadStripeCard";
import { EcommOrderChangedPayloadPaypalDetails } from "./EcommOrderChangedPayloadPaypalDetails";
import { EcommOrderChangedPayloadMetadata } from "./EcommOrderChangedPayloadMetadata";
import { EcommOrderChangedPayloadTotals } from "./EcommOrderChangedPayloadTotals";
import { EcommOrderChangedPayloadDownloadFilesItem } from "./EcommOrderChangedPayloadDownloadFilesItem";

export const EcommOrderChangedPayload: core.serialization.ObjectSchema<
    serializers.EcommOrderChangedPayload.Raw,
    Webflow.EcommOrderChangedPayload
> = core.serialization.object({
    orderId: core.serialization.string().optional(),
    status: EcommOrderChangedPayloadStatus.optional(),
    comment: core.serialization.string().optional(),
    orderComment: core.serialization.string().optional(),
    acceptedOn: core.serialization.date().optional(),
    fulfilledOn: core.serialization.date().optional(),
    refundedOn: core.serialization.date().optional(),
    disputedOn: core.serialization.date().optional(),
    disputeUpdatedOn: core.serialization.date().optional(),
    disputeLastStatus: EcommOrderChangedPayloadDisputeLastStatus.optional(),
    customerPaid: EcommOrderChangedPayloadCustomerPaid.optional(),
    netAmount: EcommOrderChangedPayloadNetAmount.optional(),
    applicationFee: EcommOrderChangedPayloadApplicationFee.optional(),
    allAddresses: core.serialization.list(EcommOrderChangedPayloadAllAddressesItem).optional(),
    shippingAddress: EcommOrderChangedPayloadShippingAddress.optional(),
    billingAddress: EcommOrderChangedPayloadBillingAddress.optional(),
    shippingProvider: core.serialization.string().optional(),
    shippingTracking: core.serialization.string().optional(),
    shippingTrackingUrl: core.serialization.property("shippingTrackingURL", core.serialization.string().optional()),
    customerInfo: EcommOrderChangedPayloadCustomerInfo.optional(),
    purchasedItems: core.serialization.list(EcommOrderChangedPayloadPurchasedItemsItem).optional(),
    purchasedItemsCount: core.serialization.number().optional(),
    stripeDetails: EcommOrderChangedPayloadStripeDetails.optional(),
    stripeCard: EcommOrderChangedPayloadStripeCard.optional(),
    paypalDetails: EcommOrderChangedPayloadPaypalDetails.optional(),
    customData: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
    metadata: EcommOrderChangedPayloadMetadata.optional(),
    isCustomerDeleted: core.serialization.boolean().optional(),
    isShippingRequired: core.serialization.boolean().optional(),
    hasDownloads: core.serialization.boolean().optional(),
    paymentProcessor: core.serialization.string().optional(),
    totals: EcommOrderChangedPayloadTotals.optional(),
    downloadFiles: core.serialization.list(EcommOrderChangedPayloadDownloadFilesItem).optional(),
});

export declare namespace EcommOrderChangedPayload {
    interface Raw {
        orderId?: string | null;
        status?: EcommOrderChangedPayloadStatus.Raw | null;
        comment?: string | null;
        orderComment?: string | null;
        acceptedOn?: string | null;
        fulfilledOn?: string | null;
        refundedOn?: string | null;
        disputedOn?: string | null;
        disputeUpdatedOn?: string | null;
        disputeLastStatus?: EcommOrderChangedPayloadDisputeLastStatus.Raw | null;
        customerPaid?: EcommOrderChangedPayloadCustomerPaid.Raw | null;
        netAmount?: EcommOrderChangedPayloadNetAmount.Raw | null;
        applicationFee?: EcommOrderChangedPayloadApplicationFee.Raw | null;
        allAddresses?: EcommOrderChangedPayloadAllAddressesItem.Raw[] | null;
        shippingAddress?: EcommOrderChangedPayloadShippingAddress.Raw | null;
        billingAddress?: EcommOrderChangedPayloadBillingAddress.Raw | null;
        shippingProvider?: string | null;
        shippingTracking?: string | null;
        shippingTrackingURL?: string | null;
        customerInfo?: EcommOrderChangedPayloadCustomerInfo.Raw | null;
        purchasedItems?: EcommOrderChangedPayloadPurchasedItemsItem.Raw[] | null;
        purchasedItemsCount?: number | null;
        stripeDetails?: EcommOrderChangedPayloadStripeDetails.Raw | null;
        stripeCard?: EcommOrderChangedPayloadStripeCard.Raw | null;
        paypalDetails?: EcommOrderChangedPayloadPaypalDetails.Raw | null;
        customData?: Record<string, unknown>[] | null;
        metadata?: EcommOrderChangedPayloadMetadata.Raw | null;
        isCustomerDeleted?: boolean | null;
        isShippingRequired?: boolean | null;
        hasDownloads?: boolean | null;
        paymentProcessor?: string | null;
        totals?: EcommOrderChangedPayloadTotals.Raw | null;
        downloadFiles?: EcommOrderChangedPayloadDownloadFilesItem.Raw[] | null;
    }
}
