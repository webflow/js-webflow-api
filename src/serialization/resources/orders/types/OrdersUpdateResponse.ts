/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Webflow from "../../../../api/index";
import * as core from "../../../../core";
import { OrdersUpdateResponseStatus } from "./OrdersUpdateResponseStatus";
import { OrdersUpdateResponseDisputeLastStatus } from "./OrdersUpdateResponseDisputeLastStatus";
import { OrdersUpdateResponseCustomerPaid } from "./OrdersUpdateResponseCustomerPaid";
import { OrdersUpdateResponseNetAmount } from "./OrdersUpdateResponseNetAmount";
import { OrdersUpdateResponseApplicationFee } from "./OrdersUpdateResponseApplicationFee";
import { OrdersUpdateResponseAllAddressesItem } from "./OrdersUpdateResponseAllAddressesItem";
import { OrdersUpdateResponseShippingAddress } from "./OrdersUpdateResponseShippingAddress";
import { OrdersUpdateResponseBillingAddress } from "./OrdersUpdateResponseBillingAddress";
import { OrdersUpdateResponseCustomerInfo } from "./OrdersUpdateResponseCustomerInfo";
import { OrdersUpdateResponsePurchasedItemsItem } from "./OrdersUpdateResponsePurchasedItemsItem";
import { OrdersUpdateResponseStripeDetails } from "./OrdersUpdateResponseStripeDetails";
import { OrdersUpdateResponseStripeCard } from "./OrdersUpdateResponseStripeCard";
import { OrdersUpdateResponsePaypalDetails } from "./OrdersUpdateResponsePaypalDetails";
import { OrdersUpdateResponseMetadata } from "./OrdersUpdateResponseMetadata";
import { OrdersUpdateResponseTotals } from "./OrdersUpdateResponseTotals";
import { OrdersUpdateResponseDownloadFilesItem } from "./OrdersUpdateResponseDownloadFilesItem";

export const OrdersUpdateResponse: core.serialization.ObjectSchema<
    serializers.OrdersUpdateResponse.Raw,
    Webflow.OrdersUpdateResponse
> = core.serialization.object({
    orderId: core.serialization.string().optional(),
    status: OrdersUpdateResponseStatus.optional(),
    comment: core.serialization.string().optional(),
    orderComment: core.serialization.string().optional(),
    acceptedOn: core.serialization.date().optional(),
    fulfilledOn: core.serialization.date().optional(),
    refundedOn: core.serialization.date().optional(),
    disputedOn: core.serialization.date().optional(),
    disputeUpdatedOn: core.serialization.date().optional(),
    disputeLastStatus: OrdersUpdateResponseDisputeLastStatus.optional(),
    customerPaid: OrdersUpdateResponseCustomerPaid.optional(),
    netAmount: OrdersUpdateResponseNetAmount.optional(),
    applicationFee: OrdersUpdateResponseApplicationFee.optional(),
    allAddresses: core.serialization.list(OrdersUpdateResponseAllAddressesItem).optional(),
    shippingAddress: OrdersUpdateResponseShippingAddress.optional(),
    billingAddress: OrdersUpdateResponseBillingAddress.optional(),
    shippingProvider: core.serialization.string().optional(),
    shippingTracking: core.serialization.string().optional(),
    shippingTrackingUrl: core.serialization.property("shippingTrackingURL", core.serialization.string().optional()),
    customerInfo: OrdersUpdateResponseCustomerInfo.optional(),
    purchasedItems: core.serialization.list(OrdersUpdateResponsePurchasedItemsItem).optional(),
    purchasedItemsCount: core.serialization.number().optional(),
    stripeDetails: OrdersUpdateResponseStripeDetails.optional(),
    stripeCard: OrdersUpdateResponseStripeCard.optional(),
    paypalDetails: OrdersUpdateResponsePaypalDetails.optional(),
    customData: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
    metadata: OrdersUpdateResponseMetadata.optional(),
    isCustomerDeleted: core.serialization.boolean().optional(),
    isShippingRequired: core.serialization.boolean().optional(),
    hasDownloads: core.serialization.boolean().optional(),
    paymentProcessor: core.serialization.string().optional(),
    totals: OrdersUpdateResponseTotals.optional(),
    downloadFiles: core.serialization.list(OrdersUpdateResponseDownloadFilesItem).optional(),
});

export declare namespace OrdersUpdateResponse {
    interface Raw {
        orderId?: string | null;
        status?: OrdersUpdateResponseStatus.Raw | null;
        comment?: string | null;
        orderComment?: string | null;
        acceptedOn?: string | null;
        fulfilledOn?: string | null;
        refundedOn?: string | null;
        disputedOn?: string | null;
        disputeUpdatedOn?: string | null;
        disputeLastStatus?: OrdersUpdateResponseDisputeLastStatus.Raw | null;
        customerPaid?: OrdersUpdateResponseCustomerPaid.Raw | null;
        netAmount?: OrdersUpdateResponseNetAmount.Raw | null;
        applicationFee?: OrdersUpdateResponseApplicationFee.Raw | null;
        allAddresses?: OrdersUpdateResponseAllAddressesItem.Raw[] | null;
        shippingAddress?: OrdersUpdateResponseShippingAddress.Raw | null;
        billingAddress?: OrdersUpdateResponseBillingAddress.Raw | null;
        shippingProvider?: string | null;
        shippingTracking?: string | null;
        shippingTrackingURL?: string | null;
        customerInfo?: OrdersUpdateResponseCustomerInfo.Raw | null;
        purchasedItems?: OrdersUpdateResponsePurchasedItemsItem.Raw[] | null;
        purchasedItemsCount?: number | null;
        stripeDetails?: OrdersUpdateResponseStripeDetails.Raw | null;
        stripeCard?: OrdersUpdateResponseStripeCard.Raw | null;
        paypalDetails?: OrdersUpdateResponsePaypalDetails.Raw | null;
        customData?: Record<string, unknown>[] | null;
        metadata?: OrdersUpdateResponseMetadata.Raw | null;
        isCustomerDeleted?: boolean | null;
        isShippingRequired?: boolean | null;
        hasDownloads?: boolean | null;
        paymentProcessor?: string | null;
        totals?: OrdersUpdateResponseTotals.Raw | null;
        downloadFiles?: OrdersUpdateResponseDownloadFilesItem.Raw[] | null;
    }
}
