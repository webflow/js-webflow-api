/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Webflow from "../../api/index";
import * as core from "../../core";
import { CollectionItemRemovedPayloadFieldData } from "./CollectionItemRemovedPayloadFieldData";

export const CollectionItemRemovedPayload: core.serialization.ObjectSchema<
    serializers.CollectionItemRemovedPayload.Raw,
    Webflow.CollectionItemRemovedPayload
> = core.serialization.object({
    id: core.serialization.string().optional(),
    siteId: core.serialization.string().optional(),
    workspaceId: core.serialization.string().optional(),
    collectionId: core.serialization.string().optional(),
    cmsLocaleId: core.serialization.string().optional(),
    lastPublished: core.serialization.date().optional(),
    lastUpdated: core.serialization.date().optional(),
    createdOn: core.serialization.date().optional(),
    isArchived: core.serialization.boolean().optional(),
    isDraft: core.serialization.boolean().optional(),
    fieldData: CollectionItemRemovedPayloadFieldData.optional(),
});

export declare namespace CollectionItemRemovedPayload {
    interface Raw {
        id?: string | null;
        siteId?: string | null;
        workspaceId?: string | null;
        collectionId?: string | null;
        cmsLocaleId?: string | null;
        lastPublished?: string | null;
        lastUpdated?: string | null;
        createdOn?: string | null;
        isArchived?: boolean | null;
        isDraft?: boolean | null;
        fieldData?: CollectionItemRemovedPayloadFieldData.Raw | null;
    }
}
