/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Webflow from "../../api/index";
import * as core from "../../core";
import { SkuPropertyList } from "./SkuPropertyList";
import { ProductFieldDataTaxCategory } from "./ProductFieldDataTaxCategory";
import { ProductFieldDataEcProductType } from "./ProductFieldDataEcProductType";

export const ProductFieldData: core.serialization.ObjectSchema<
    serializers.ProductFieldData.Raw,
    Webflow.ProductFieldData
> = core.serialization.object({
    name: core.serialization.string().optional(),
    slug: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    shippable: core.serialization.boolean().optional(),
    skuProperties: core.serialization.property("sku-properties", core.serialization.list(SkuPropertyList).optional()),
    categories: core.serialization.list(core.serialization.string()).optional(),
    taxCategory: core.serialization.property("tax-category", ProductFieldDataTaxCategory.optional()),
    defaultSku: core.serialization.property("default-sku", core.serialization.string().optional()),
    ecProductType: core.serialization.property("ec-product-type", ProductFieldDataEcProductType.optional()),
});

export declare namespace ProductFieldData {
    export interface Raw {
        name?: string | null;
        slug?: string | null;
        description?: string | null;
        shippable?: boolean | null;
        "sku-properties"?: SkuPropertyList.Raw[] | null;
        categories?: string[] | null;
        "tax-category"?: ProductFieldDataTaxCategory.Raw | null;
        "default-sku"?: string | null;
        "ec-product-type"?: ProductFieldDataEcProductType.Raw | null;
    }
}
