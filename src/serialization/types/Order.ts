/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Webflow from "../../api/index";
import * as core from "../../core";
import { OrderStatus } from "./OrderStatus";
import { OrderDisputeLastStatus } from "./OrderDisputeLastStatus";
import { OrderPrice } from "./OrderPrice";
import { OrderAddress } from "./OrderAddress";
import { OrderCustomerInfo } from "./OrderCustomerInfo";
import { OrderPurchasedItem } from "./OrderPurchasedItem";
import { StripeDetails } from "./StripeDetails";
import { StripeCard } from "./StripeCard";
import { PaypalDetails } from "./PaypalDetails";
import { OrderMetadata } from "./OrderMetadata";
import { OrderTotals } from "./OrderTotals";
import { OrderDownloadFilesItem } from "./OrderDownloadFilesItem";

export const Order: core.serialization.ObjectSchema<serializers.Order.Raw, Webflow.Order> = core.serialization.object({
    orderId: core.serialization.string().optional(),
    status: OrderStatus.optional(),
    comment: core.serialization.string().optional(),
    orderComment: core.serialization.string().optional(),
    acceptedOn: core.serialization.date().optional(),
    fulfilledOn: core.serialization.date().optional(),
    refundedOn: core.serialization.date().optional(),
    disputedOn: core.serialization.date().optional(),
    disputeUpdatedOn: core.serialization.date().optional(),
    disputeLastStatus: OrderDisputeLastStatus.optional(),
    customerPaid: OrderPrice.optional(),
    netAmount: OrderPrice.optional(),
    applicationFee: OrderPrice.optional(),
    allAddresses: core.serialization.list(OrderAddress).optional(),
    shippingAddress: OrderAddress.optional(),
    billingAddress: OrderAddress.optional(),
    shippingProvider: core.serialization.string().optional(),
    shippingTracking: core.serialization.string().optional(),
    shippingTrackingUrl: core.serialization.property("shippingTrackingURL", core.serialization.string().optional()),
    customerInfo: OrderCustomerInfo.optional(),
    purchasedItems: core.serialization.list(OrderPurchasedItem).optional(),
    purchasedItemsCount: core.serialization.number().optional(),
    stripeDetails: StripeDetails.optional(),
    stripeCard: StripeCard.optional(),
    paypalDetails: PaypalDetails.optional(),
    customData: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
    metadata: OrderMetadata.optional(),
    isCustomerDeleted: core.serialization.boolean().optional(),
    isShippingRequired: core.serialization.boolean().optional(),
    hasDownloads: core.serialization.boolean().optional(),
    paymentProcessor: core.serialization.string().optional(),
    totals: OrderTotals.optional(),
    downloadFiles: core.serialization.list(OrderDownloadFilesItem).optional(),
});

export declare namespace Order {
    export interface Raw {
        orderId?: string | null;
        status?: OrderStatus.Raw | null;
        comment?: string | null;
        orderComment?: string | null;
        acceptedOn?: string | null;
        fulfilledOn?: string | null;
        refundedOn?: string | null;
        disputedOn?: string | null;
        disputeUpdatedOn?: string | null;
        disputeLastStatus?: OrderDisputeLastStatus.Raw | null;
        customerPaid?: OrderPrice.Raw | null;
        netAmount?: OrderPrice.Raw | null;
        applicationFee?: OrderPrice.Raw | null;
        allAddresses?: OrderAddress.Raw[] | null;
        shippingAddress?: OrderAddress.Raw | null;
        billingAddress?: OrderAddress.Raw | null;
        shippingProvider?: string | null;
        shippingTracking?: string | null;
        shippingTrackingURL?: string | null;
        customerInfo?: OrderCustomerInfo.Raw | null;
        purchasedItems?: OrderPurchasedItem.Raw[] | null;
        purchasedItemsCount?: number | null;
        stripeDetails?: StripeDetails.Raw | null;
        stripeCard?: StripeCard.Raw | null;
        paypalDetails?: PaypalDetails.Raw | null;
        customData?: Record<string, unknown>[] | null;
        metadata?: OrderMetadata.Raw | null;
        isCustomerDeleted?: boolean | null;
        isShippingRequired?: boolean | null;
        hasDownloads?: boolean | null;
        paymentProcessor?: string | null;
        totals?: OrderTotals.Raw | null;
        downloadFiles?: OrderDownloadFilesItem.Raw[] | null;
    }
}
