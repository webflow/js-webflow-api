/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Webflow from "../../api/index";
import * as core from "../../core";
import { UserStatus } from "./UserStatus";
import { UserAccessGroupsItem } from "./UserAccessGroupsItem";
import { UserData } from "./UserData";

export const User: core.serialization.ObjectSchema<serializers.User.Raw, Webflow.User> = core.serialization.object({
    id: core.serialization.string().optional(),
    isEmailVerified: core.serialization.boolean().optional(),
    lastUpdated: core.serialization.date().optional(),
    invitedOn: core.serialization.date().optional(),
    createdOn: core.serialization.date().optional(),
    lastLogin: core.serialization.date().optional(),
    status: UserStatus.optional(),
    accessGroups: core.serialization.list(UserAccessGroupsItem).optional(),
    data: UserData.optional(),
});

export declare namespace User {
    export interface Raw {
        id?: string | null;
        isEmailVerified?: boolean | null;
        lastUpdated?: string | null;
        invitedOn?: string | null;
        createdOn?: string | null;
        lastLogin?: string | null;
        status?: UserStatus.Raw | null;
        accessGroups?: UserAccessGroupsItem.Raw[] | null;
        data?: UserData.Raw | null;
    }
}
