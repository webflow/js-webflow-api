/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Webflow from "../../api/index";
import * as core from "../../core";
import { Domain } from "./Domain";
import { Locales } from "./Locales";
import { SiteDataCollectionType } from "./SiteDataCollectionType";

export const Site: core.serialization.ObjectSchema<serializers.Site.Raw, Webflow.Site> = core.serialization.object({
    id: core.serialization.string(),
    workspaceId: core.serialization.string().optional(),
    createdOn: core.serialization.date().optional(),
    displayName: core.serialization.string().optional(),
    shortName: core.serialization.string().optional(),
    lastPublished: core.serialization.date().optional(),
    lastUpdated: core.serialization.date().optional(),
    previewUrl: core.serialization.string().optional(),
    timeZone: core.serialization.string().optional(),
    parentFolderId: core.serialization.string().optional(),
    customDomains: core.serialization.list(Domain).optional(),
    locales: Locales.optional(),
    dataCollectionEnabled: core.serialization.boolean().optional(),
    dataCollectionType: SiteDataCollectionType.optional(),
});

export declare namespace Site {
    interface Raw {
        id: string;
        workspaceId?: string | null;
        createdOn?: string | null;
        displayName?: string | null;
        shortName?: string | null;
        lastPublished?: string | null;
        lastUpdated?: string | null;
        previewUrl?: string | null;
        timeZone?: string | null;
        parentFolderId?: string | null;
        customDomains?: Domain.Raw[] | null;
        locales?: Locales.Raw | null;
        dataCollectionEnabled?: boolean | null;
        dataCollectionType?: SiteDataCollectionType.Raw | null;
    }
}
