/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Webflow from "../../api/index";
import * as core from "../../core";
import { CommentPayloadAuthor } from "./CommentPayloadAuthor";
import { CommentPayloadMentionedUsersItem } from "./CommentPayloadMentionedUsersItem";

export const CommentPayload: core.serialization.ObjectSchema<serializers.CommentPayload.Raw, Webflow.CommentPayload> =
    core.serialization.object({
        threadId: core.serialization.string().optional(),
        commentId: core.serialization.string().optional(),
        type: core.serialization.string().optional(),
        siteId: core.serialization.string().optional(),
        pageId: core.serialization.string().optional(),
        localeId: core.serialization.string().optional(),
        itemId: core.serialization.string().optional(),
        breakpoint: core.serialization.string().optional(),
        url: core.serialization.string().optional(),
        content: core.serialization.string(),
        isResolved: core.serialization.boolean(),
        author: CommentPayloadAuthor,
        mentionedUsers: core.serialization.list(CommentPayloadMentionedUsersItem),
        createdOn: core.serialization.string().optional(),
        lastUpdated: core.serialization.string().optional(),
    });

export declare namespace CommentPayload {
    export interface Raw {
        threadId?: string | null;
        commentId?: string | null;
        type?: string | null;
        siteId?: string | null;
        pageId?: string | null;
        localeId?: string | null;
        itemId?: string | null;
        breakpoint?: string | null;
        url?: string | null;
        content: string;
        isResolved: boolean;
        author: CommentPayloadAuthor.Raw;
        mentionedUsers: CommentPayloadMentionedUsersItem.Raw[];
        createdOn?: string | null;
        lastUpdated?: string | null;
    }
}
