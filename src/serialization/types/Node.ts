/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Webflow from "../../api/index";
import * as core from "../../core";
import { TextNode } from "./TextNode";
import { ImageNode } from "./ImageNode";
import { ComponentNode } from "./ComponentNode";

export const Node: core.serialization.Schema<serializers.Node.Raw, Webflow.Node> = core.serialization
    .union("type", {
        text: TextNode,
        image: ImageNode,
        "component-instance": ComponentNode,
    })
    .transform<Webflow.Node>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace Node {
    type Raw = Node.Text | Node.Image | Node.ComponentInstance;

    interface Text extends TextNode.Raw {
        type: "text";
    }

    interface Image extends ImageNode.Raw {
        type: "image";
    }

    interface ComponentInstance extends ComponentNode.Raw {
        type: "component-instance";
    }
}
