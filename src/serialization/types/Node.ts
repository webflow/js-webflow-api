/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Webflow from "../../api/index";
import * as core from "../../core";
import { TextNodeDom } from "./TextNodeDom";
import { ImageNodeDom } from "./ImageNodeDom";
import { ComponentNodeDom } from "./ComponentNodeDom";
import { TextInputNodeDom } from "./TextInputNodeDom";
import { SelectNodeDom } from "./SelectNodeDom";
import { SubmitButtonNodeDom } from "./SubmitButtonNodeDom";
import { SearchButtonNodeDom } from "./SearchButtonNodeDom";

export const Node: core.serialization.Schema<serializers.Node.Raw, Webflow.Node> = core.serialization
    .union("type", {
        text: TextNodeDom,
        image: ImageNodeDom,
        "component-instance": ComponentNodeDom,
        "text-input": TextInputNodeDom,
        select: SelectNodeDom,
        "submit-button": SubmitButtonNodeDom,
        "search-button": SearchButtonNodeDom,
    })
    .transform<Webflow.Node>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace Node {
    export type Raw =
        | Node.Text
        | Node.Image
        | Node.ComponentInstance
        | Node.TextInput
        | Node.Select
        | Node.SubmitButton
        | Node.SearchButton;

    export interface Text extends TextNodeDom.Raw {
        type: "text";
    }

    export interface Image extends ImageNodeDom.Raw {
        type: "image";
    }

    export interface ComponentInstance extends ComponentNodeDom.Raw {
        type: "component-instance";
    }

    export interface TextInput extends TextInputNodeDom.Raw {
        type: "text-input";
    }

    export interface Select extends SelectNodeDom.Raw {
        type: "select";
    }

    export interface SubmitButton extends SubmitButtonNodeDom.Raw {
        type: "submit-button";
    }

    export interface SearchButton extends SearchButtonNodeDom.Raw {
        type: "search-button";
    }
}
