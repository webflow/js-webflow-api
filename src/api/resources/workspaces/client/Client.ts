/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { AuditLogs } from "../resources/auditLogs/client/Client";

export declare namespace Workspaces {
    interface Options {
        environment?: core.Supplier<environments.WebflowEnvironment | environments.WebflowEnvironmentUrls>;
        accessToken: core.Supplier<core.BearerToken>;
    }

    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class Workspaces {
    constructor(protected readonly _options: Workspaces.Options) {}

    protected _auditLogs: AuditLogs | undefined;

    public get auditLogs(): AuditLogs {
        return (this._auditLogs ??= new AuditLogs(this._options));
    }
}
