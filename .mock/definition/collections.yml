imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/collections
      method: GET
      auth: true
      docs: |
        List of all Collections within a Site.

        Required scope | `cms:read`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Collections
      response:
        docs: Request was successful
        type: root.CollectionList
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              collections:
                - id: 63692ab61fb2852f582ba8f5
                  displayName: Products
                  singularName: Product
                  slug: product
                  createdOn: '2019-06-12T13:35:14Z'
                  lastUpdated: '2022-11-17T15:08:50Z'
                - id: 63692ab61fb2856e6a2ba8f6
                  displayName: Categories
                  singularName: Category
                  slug: category
                  createdOn: '2019-06-12T13:35:14Z'
                  lastUpdated: '2022-11-17T15:08:50Z'
                - id: 63692ab61fb285a8562ba8f4
                  displayName: SKUs
                  singularName: SKU
                  slug: sku
                  createdOn: '2019-06-12T13:35:14Z'
                  lastUpdated: '2022-11-17T15:08:50Z'
    create:
      path: /sites/{site_id}/collections
      method: POST
      auth: true
      docs: |
        Create a Collection for a site.

        Required scope | `cms:write`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Create Collection
      request:
        name: CollectionsCreateRequest
        body:
          properties:
            displayName:
              type: string
              docs: Name of the collection. Each collection name must be distinct.
            singularName:
              type: string
              docs: Singular name of each item.
            slug:
              type: optional<string>
              docs: Part of a URL that identifier
            fields:
              type: optional<list<root.FieldCreate>>
              docs: An array of custom fields to add to the collection
        content-type: application/json
      response:
        docs: Request was successful
        type: root.Collection
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            displayName: Blog Posts
            singularName: Blog Post
            slug: posts
            fields:
              - isRequired: true
                type: PlainText
                displayName: Title
                helpText: The title of the blog post
              - isRequired: true
                type: RichText
                displayName: Content
                helpText: The content of the blog post
              - isRequired: true
                type: Reference
                displayName: Author
                helpText: The author of the blog post
                metadata:
                  collectionId: 23cc2d952d4e4631ffd4345d2743db4e
          response:
            body:
              id: 562ac0395358780a1f5e6fbd
              displayName: Blog Posts
              singularName: Blog Post
              slug: posts
              createdOn: '2016-10-24T19:41:48Z'
              lastUpdated: '2016-10-24T19:42:38Z'
              fields:
                - id: id
                  isRequired: true
                  isEditable: true
                  type: PlainText
                  slug: title
                  displayName: Title
                  helpText: The title of the blog post
                - id: id
                  isRequired: true
                  isEditable: true
                  type: RichText
                  slug: content
                  displayName: Content
                  helpText: The content of the blog post
                - id: id
                  isRequired: true
                  isEditable: true
                  type: Reference
                  slug: author
                  displayName: Author
                  helpText: The author of the blog post
    get:
      path: /collections/{collection_id}
      method: GET
      auth: true
      docs: |
        Get the full details of a collection from its ID.

        Required scope | `cms:read`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
      display-name: Get Collection Details
      response:
        docs: Request was successful
        type: root.Collection
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          response:
            body:
              id: 580e63fc8c9a982ac9b8b745
              displayName: Blog Posts
              singularName: Blog Post
              slug: post
              createdOn: '2016-10-24T19:41:48Z'
              lastUpdated: '2016-10-24T19:42:38Z'
              fields:
                - id: 23cc2d952d4e4631ffd4345d2743db4e
                  isRequired: true
                  isEditable: true
                  type: PlainText
                  slug: name
                  displayName: Name
    delete:
      path: /collections/{collection_id}
      method: DELETE
      auth: true
      docs: |
        Delete a collection using its ID.

        Required scope | `cms:write`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
      display-name: Delete Collection
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
  source:
    openapi: ../../../openapi/referenced-specs/v2.yml
  display-name: Collections
docs: Collections are CMS collections of items.
