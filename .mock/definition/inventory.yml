imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /collections/{collection_id}/items/{item_id}/inventory
      method: GET
      auth: true
      docs: |
        List the current inventory levels for a particular SKU item.

        Required scope | `ecommerce:read`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        item_id:
          type: string
          docs: Unique identifier for an Item
      display-name: List Inventory
      response:
        docs: Request was successful
        type: root.InventoryItem
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          response:
            body:
              id: 5bfedb42bab0ad90fa7dad39
              quantity: 100
              inventoryType: finite
    update:
      path: /collections/{collection_id}/items/{item_id}/inventory
      method: PATCH
      auth: true
      docs: >
        Updates the current inventory levels for a particular SKU item. 


        Updates may be given in one or two methods, absolutely or
        incrementally. 

        - Absolute updates are done by setting `quantity` directly. 

        - Incremental updates are by specifying the inventory delta in
        `updateQuantity` which is then added to the `quantity` stored on the
        server.


        Required scope | `ecommerce:write`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        item_id:
          type: string
          docs: Unique identifier for an Item
      display-name: Update Item Inventory
      request:
        name: InventoryUpdateRequest
        body:
          properties:
            inventoryType:
              type: InventoryUpdateRequestInventoryType
              docs: infinite or finite
            updateQuantity:
              type: optional<double>
              docs: Adds this quantity to currently store quantity. Can be negative.
            quantity:
              type: optional<double>
              docs: Immediately sets quantity to this value.
        content-type: application/json
      response:
        docs: Request was successful
        type: root.InventoryItem
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          request:
            inventoryType: infinite
          response:
            body:
              id: 5bfedb42bab0ad90fa7dad39
              quantity: 100
              inventoryType: finite
  source:
    openapi: ../../../openapi/referenced-specs/v2.yml
  display-name: Inventory
docs: Inventory is the stock of e-commerce items in your Webflow site.
types:
  InventoryUpdateRequestInventoryType:
    enum:
      - infinite
      - finite
    docs: infinite or finite
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
