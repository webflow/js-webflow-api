imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/products
      method: GET
      auth: true
      docs: >
        Retrieve all products for a site. 


        Use `limit` and `offset` to page through all products with subsequent
        requests. All SKUs for each product

        will also be fetched and returned. The `limit`, `offset` and `total`
        values represent Products only and do not include any SKUs.


        Required scope | `ecommerce:read`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Products & SKUs
      request:
        name: ProductsListRequest
        query-parameters:
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
      response:
        docs: Request was successful
        type: root.ProductAndSkUsList
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              items:
                - product:
                    id: 660eb7a486d1d6e0412292d7
                    cmsLocaleId: 653ad57de882f528b32e810e
                    lastPublished: '2024-04-04T14:24:19Z'
                    lastUpdated: '2024-04-04T14:30:19Z'
                    createdOn: '2024-04-04T14:22:28Z'
                    isArchived: false
                    isDraft: false
                    fieldData:
                      name: T-Shirt
                      slug: t-shirt
                      description: A plain cotton t-shirt.
                      shippable: true
                      sku-properties:
                        - id: Color
                          name: Color
                          enum:
                            - id: id
                              name: Royal Blue
                              slug: royal-blue
                  skus:
                    - id: 580e63fc8c9a982ac9b8b745
                      cmsLocaleId: 653ad57de882f528b32e810e
                      lastPublished: '2023-03-17T18:47:35Z'
                      lastUpdated: '2023-03-17T18:47:35Z'
                      createdOn: '2023-03-17T18:47:35Z'
                      fieldData:
                        sku-values:
                          color: blue
                          size: small
                        name: Colorful T-shirt - Default
                        slug: colorful-t-shirt-default
                        price:
                          value: 2499
                          unit: USD
                          currency: USD
                        quantity: 10
                        main-image: https://www.example.com/image.jpg
                        sku: '1234567890'
                        sku-properties:
                          - id: Color
                            name: Color
                            enum:
                              - id: id
                                name: Royal Blue
                                slug: royal-blue
              pagination:
                limit: 100
                offset: 0
                total: 100
    create:
      path: /sites/{site_id}/products
      method: POST
      auth: true
      docs: >
        Create a new ecommerce product and defaultSKU. A product, at minimum,
        must have a single SKU.


        To create a product with multiple SKUs:
          - First, create a list of `sku-properties`, also known as [product options](https://help.webflow.com/hc/en-us/articles/33961334531347-Create-product-options-and-variants). For example, a T-shirt product may have a "color" `sku-property`, with a list of enum values: red, yellow, and blue, another `sku-property` may be "size", with a list of enum values: small, medium, and large.
          - Once, a product is created with a list of `sku-properties`, Webflow will create a **default SKU**, which is always a combination of the first `enum` values of each `sku-property`. (e.g. Small - Red - T-Shirt)
          - After creation, you can create additional SKUs for the product, using the [Create SKUs endpoint.](/data/reference/ecommerce/products/create-sku)

        Upon creation, the default product type will be `Advanced`, which
        ensures all Product and SKU fields will be shown to users in the
        Designer.


        Required scope | `ecommerce:write`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Create Product & SKU
      request:
        name: ProductSkuCreate
        body:
          properties:
            publishStatus: optional<root.PublishStatus>
            product: ProductSkuCreateProduct
            sku: ProductSkuCreateSku
        content-type: application/json
      response:
        docs: Request was successful
        type: root.ProductAndSkUs
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            publishStatus: staging
            product:
              fieldData:
                name: Colorful T-shirt
                slug: colorful-t-shirt
                description: >-
                  Our best-selling t-shirt available in multiple colors and
                  sizes
                sku-properties:
                  - id: color
                    name: Color
                    enum:
                      - id: red
                        name: Red
                        slug: red
                      - id: yellow
                        name: Yellow
                        slug: yellow
                      - id: blue
                        name: Blue
                        slug: blue
                  - id: size
                    name: Size
                    enum:
                      - id: small
                        name: Small
                        slug: small
                      - id: medium
                        name: Medium
                        slug: medium
                      - id: large
                        name: Large
                        slug: large
            sku:
              fieldData:
                name: Colorful T-shirt - Red Small
                slug: colorful-t-shirt-red-small
                price:
                  value: 2499
                  unit: USD
                  currency: USD
                main-image: >-
                  https://rocketamp-sample-store.myshopify.com/cdn/shop/products/Gildan_2000_Antique_Cherry_Red_Front_1024x1024.jpg?v=1527232987
          response:
            body:
              product:
                id: 660eb7a486d1d6e0412292d7
                cmsLocaleId: 653ad57de882f528b32e810e
                lastPublished: '2024-04-04T14:24:19Z'
                lastUpdated: '2024-04-04T14:30:19Z'
                createdOn: '2024-04-04T14:22:28Z'
                isArchived: false
                isDraft: false
                fieldData:
                  name: T-Shirt
                  slug: t-shirt
                  description: A plain cotton t-shirt.
                  shippable: true
                  sku-properties:
                    - id: Color
                      name: Color
                      enum:
                        - id: id
                          name: Royal Blue
                          slug: royal-blue
                  categories:
                    - categories
                  tax-category: standard-taxable
                  default-sku: default-sku
                  ec-product-type: ff42fee0113744f693a764e3431a9cc2
              skus:
                - id: 580e63fc8c9a982ac9b8b745
                  cmsLocaleId: 653ad57de882f528b32e810e
                  lastPublished: '2023-03-17T18:47:35Z'
                  lastUpdated: '2023-03-17T18:47:35Z'
                  createdOn: '2023-03-17T18:47:35Z'
                  fieldData:
                    sku-values:
                      color: blue
                      size: small
                    name: Colorful T-shirt - Default
                    slug: colorful-t-shirt-default
                    price:
                      value: 2499
                      unit: USD
                      currency: USD
                    quantity: 10
                    main-image: https://www.example.com/image.jpg
                    sku: '1234567890'
                    sku-properties:
                      - id: Color
                        name: Color
                        enum:
                          - id: id
                            name: Royal Blue
                            slug: royal-blue
    get:
      path: /sites/{site_id}/products/{product_id}
      method: GET
      auth: true
      docs: |
        Retrieve a single product by its ID. All of its SKUs will also be
        retrieved.

        Required scope | `ecommerce:read`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        product_id:
          type: string
          docs: Unique identifier for a Product
      display-name: Get Product and SKUs
      response:
        docs: Request was successful
        type: root.ProductAndSkUs
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
          response:
            body:
              product:
                id: 660eb7a486d1d6e0412292d7
                cmsLocaleId: 653ad57de882f528b32e810e
                lastPublished: '2024-04-04T14:24:19Z'
                lastUpdated: '2024-04-04T14:30:19Z'
                createdOn: '2024-04-04T14:22:28Z'
                isArchived: false
                isDraft: false
                fieldData:
                  name: T-Shirt
                  slug: t-shirt
                  description: A plain cotton t-shirt.
                  shippable: true
                  sku-properties:
                    - id: Color
                      name: Color
                      enum:
                        - id: id
                          name: Royal Blue
                          slug: royal-blue
                  categories:
                    - categories
                  tax-category: standard-taxable
                  default-sku: default-sku
                  ec-product-type: ff42fee0113744f693a764e3431a9cc2
              skus:
                - id: 580e63fc8c9a982ac9b8b745
                  cmsLocaleId: 653ad57de882f528b32e810e
                  lastPublished: '2023-03-17T18:47:35Z'
                  lastUpdated: '2023-03-17T18:47:35Z'
                  createdOn: '2023-03-17T18:47:35Z'
                  fieldData:
                    sku-values:
                      color: blue
                      size: small
                    name: Colorful T-shirt - Default
                    slug: colorful-t-shirt-default
                    price:
                      value: 2499
                      unit: USD
                      currency: USD
                    quantity: 10
                    main-image: https://www.example.com/image.jpg
                    sku: '1234567890'
                    sku-properties:
                      - id: Color
                        name: Color
                        enum:
                          - id: id
                            name: Royal Blue
                            slug: royal-blue
    update:
      path: /sites/{site_id}/products/{product_id}
      method: PATCH
      auth: true
      docs: >
        Update an existing Product.


        Updating an existing Product will set the product type to `Advanced`,
        which ensures all Product and SKU fields will be shown to users in the
        Designer.


        Required scope | `ecommerce:write`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        product_id:
          type: string
          docs: Unique identifier for a Product
      display-name: Update Product
      request:
        name: ProductSkuUpdate
        body:
          properties:
            publishStatus: optional<root.PublishStatus>
            product: optional<root.Product>
            sku: optional<root.Sku>
        content-type: application/json
      response:
        docs: Request was successful
        type: root.Product
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
          request: {}
          response:
            body:
              id: 660eb7a486d1d6e0412292d7
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2024-04-04T14:24:19Z'
              lastUpdated: '2024-04-04T14:30:19Z'
              createdOn: '2024-04-04T14:22:28Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: T-Shirt
                slug: t-shirt
                description: A plain cotton t-shirt.
                shippable: true
                sku-properties:
                  - id: Color
                    name: Color
                    enum:
                      - id: id
                        name: Royal Blue
                        slug: royal-blue
                categories:
                  - categories
                tax-category: standard-taxable
                default-sku: default-sku
                ec-product-type: ff42fee0113744f693a764e3431a9cc2
    create-sku:
      path: /sites/{site_id}/products/{product_id}/skus
      method: POST
      auth: true
      docs: >
        Create additional SKUs to manage every [option and variant of your
        Product.](https://help.webflow.com/hc/en-us/articles/33961334531347-Create-product-options-and-variants)


        Creating SKUs through the API will set the product type to `Advanced`,
        which ensures all Product and SKU fields will be shown to users in the
        Designer.


        Required scope | `ecommerce:write`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        product_id:
          type: string
          docs: Unique identifier for a Product
      display-name: Create SKUs
      request:
        name: ProductsCreateSkuRequest
        body:
          properties:
            publishStatus: optional<root.PublishStatus>
            skus:
              docs: An array of the SKU data your are adding
              type: list<root.Sku>
        content-type: application/json
      response:
        docs: Request was successful
        type: ProductsCreateSkuResponse
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
          request:
            skus:
              - fieldData:
                  name: Colorful T-shirt - Default
                  slug: colorful-t-shirt-default
                  price:
                    value: 2499
                    unit: USD
                    currency: USD
          response:
            body:
              skus:
                - id: 580e63fc8c9a982ac9b8b745
                  cmsLocaleId: 653ad57de882f528b32e810e
                  lastPublished: '2023-03-17T18:47:35Z'
                  lastUpdated: '2023-03-17T18:47:35Z'
                  createdOn: '2023-03-17T18:47:35Z'
                  fieldData:
                    sku-values:
                      color: blue
                      size: small
                    name: Colorful T-shirt - Default
                    slug: colorful-t-shirt-default
                    price:
                      value: 2499
                      unit: USD
                      currency: USD
                    quantity: 10
                    main-image: https://www.example.com/image.jpg
                    sku: '1234567890'
                    sku-properties:
                      - id: Color
                        name: Color
                        enum:
                          - id: id
                            name: Royal Blue
                            slug: royal-blue
    update-sku:
      path: /sites/{site_id}/products/{product_id}/skus/{sku_id}
      method: PATCH
      auth: true
      docs: >
        Update a specified SKU.


        Updating an existing SKU will set the Product type to `Advanced`, which
        ensures all Product and SKU fields will be shown to users in the
        Designer.


        Required scope | `ecommerce:write`
      source:
        openapi: ../../../openapi/referenced-specs/v2.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        product_id:
          type: string
          docs: Unique identifier for a Product
        sku_id:
          type: string
          docs: Unique identifier for a SKU
      display-name: Update SKU
      request:
        name: ProductsUpdateSkuRequest
        body:
          properties:
            publishStatus: optional<root.PublishStatus>
            sku: root.Sku
        content-type: application/json
      response:
        docs: Request was successful
        type: root.Sku
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
            sku_id: 5e8518516e147040726cc415
          request:
            sku:
              fieldData:
                name: Colorful T-shirt - Default
                slug: colorful-t-shirt-default
                price:
                  value: 2499
                  unit: USD
                  currency: USD
          response:
            body:
              id: 580e63fc8c9a982ac9b8b745
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2023-03-17T18:47:35Z'
              lastUpdated: '2023-03-17T18:47:35Z'
              createdOn: '2023-03-17T18:47:35Z'
              fieldData:
                sku-values:
                  color: blue
                  size: small
                name: Colorful T-shirt - Default
                slug: colorful-t-shirt-default
                price:
                  value: 2499
                  unit: USD
                  currency: USD
                compare-at-price:
                  value: 100
                  unit: USD
                ec-sku-billing-method: one-time
                ec-sku-subscription-plan:
                  interval: day
                  frequency: 1
                  trial: 7
                  plans:
                    - {}
                track-inventory: true
                quantity: 10
                main-image: https://www.example.com/image.jpg
                sku: '1234567890'
                sku-properties:
                  - id: Color
                    name: Color
                    enum:
                      - id: id
                        name: Royal Blue
                        slug: royal-blue
  source:
    openapi: ../../../openapi/referenced-specs/v2.yml
types:
  ProductSkuCreateProduct:
    properties:
      fieldData: optional<root.ProductFieldData>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  ProductSkuCreateSku:
    properties:
      fieldData: optional<root.SkuFieldData>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  ProductsCreateSkuResponse:
    properties:
      skus: list<root.Sku>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
