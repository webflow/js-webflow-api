errors:
  UnauthorizedError:
    status-code: 401
    type: Error
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
    examples:
      - value:
          code: not_authorized
          message: Request not authorized
  ForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          code: missing_scopes
          message: >-
            OAuthForbidden: You are missing the following scopes -
            components:write
      - value:
          key: value
      - value:
          code: forbidden
          message: User is not authorized to perform this action
  BadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted.
    examples:
      - value:
          code: bad_request
          message: 'Bad Request: Request is malformed'
      - value:
          key: value
      - value:
          code: validation_error
          message: 'Validation Error: Provided ID is invalid'
  NotFoundError:
    status-code: 404
    type: Error
    docs: Requested resource not found
    examples:
      - value:
          code: resource_not_found
          message: 'Requested resource not found: The site cannot be found'
  TooManyRequestsError:
    status-code: 429
    type: Error
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          code: too_many_requests
          message: Too many requests
  InternalServerError:
    status-code: 500
    type: Error
    docs: We had a problem with our server. Try again later.
    examples:
      - value:
          code: internal_error
          message: An Internal Error occurred
  ConflictError:
    status-code: 409
    type: unknown
    docs: Site is published to multiple domains at different times
    examples:
      - value:
          message: '''Site is published to multiple domains at different times'
      - value:
          code: custom_code_max_registered_scripts
          message: The maximum number of registered scripts has been reached.
      - value:
          code: forms_require_republish
          message: To access this feature, the site needs to be republished.
      - value:
          key: value
      - value:
          code: ecommerce_not_enabled
          message: Ecommerce is not yet initialized
types:
  ForbiddenErrorBody:
    discriminated: false
    union:
      - InvalidScopes
      - UsersNotEnabled
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  BadRequestErrorBody:
    discriminated: false
    union:
      - InvalidDomain
      - NoDomains
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ConflictErrorBody:
    discriminated: false
    union:
      - DuplicateUserEmail
      - UserLimitReached
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  AuthorizedUser:
    properties:
      id:
        type: optional<string>
        docs: The unique ID of the user
      email:
        type: optional<string>
        docs: The user's email address
        validation:
          format: email
      firstName:
        type: optional<string>
        docs: The user's first name
      lastName:
        type: optional<string>
        docs: The user's last name
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ErrorCode:
    enum:
      - bad_request
      - collection_not_found
      - conflict
      - duplicate_collection
      - duplicate_user_email
      - ecommerce_not_enabled
      - forbidden
      - forms_require_republish
      - incompatible_webhook_filter
      - internal_error
      - invalid_auth_version
      - invalid_credentials
      - invalid_domain
      - invalid_user_email
      - item_not_found
      - missing_scopes
      - no_domains
      - not_authorized
      - not_enterprise_plan_site
      - not_enterprise_plan_workspace
      - order_not_found
      - resource_not_found
      - too_many_requests
      - unsupported_version
      - unsupported_webhook_trigger_type
      - user_limit_reached
      - user_not_found
      - users_not_enabled
      - validation_error
    docs: Error code
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Error:
    properties:
      code:
        type: optional<ErrorCode>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<unknown>>
        docs: Array of errors
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Application: unknown
  AuthorizationAuthorizationAuthorizedTo:
    properties:
      siteIds:
        type: optional<list<unknown>>
        docs: Array of Sites this app is authorized to
      workspaceIds:
        type: optional<list<unknown>>
        docs: Array of Workspaces this app is authorized to
      userIds:
        type: optional<list<unknown>>
        docs: Array of Users this app is authorized to
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  AuthorizationAuthorization:
    docs: The Authorization object
    properties:
      id:
        type: optional<string>
        docs: The unique ID of the Authorization instance
      createdOn:
        type: optional<datetime>
        docs: The date the Authorization was created
      lastUsed:
        type: optional<datetime>
        docs: The date the Authorization was last used
      grantType:
        type: optional<string>
        docs: The grant type of the Authorization
      rateLimit:
        type: optional<integer>
        docs: The default rate limit for the Authorization (requests/min)
      scope:
        type: optional<string>
        docs: Comma separted list of OAuth scopes corresponding to the Authorization
      authorizedTo: optional<AuthorizationAuthorizationAuthorizedTo>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  Authorization:
    properties:
      authorization:
        type: optional<AuthorizationAuthorization>
        docs: The Authorization object
      application: optional<Application>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Domain:
    properties:
      id:
        type: string
        docs: Unique identifier for the Domain
      url:
        type: optional<string>
        docs: The registered Domain name
      lastPublished:
        type: optional<datetime>
        docs: The date the custom domain was last published to
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Locale:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the locale.
      cmsLocaleId:
        type: optional<string>
        docs: A CMS-specific identifier for the locale.
      enabled:
        type: optional<boolean>
        docs: Indicates if the locale is enabled.
      displayName:
        type: optional<string>
        docs: The display name of the locale, typically in English.
      displayImageId:
        type: optional<string>
        docs: An optional ID for an image associated with the locale, nullable.
      redirect:
        type: optional<boolean>
        docs: Determines if requests should redirect to the locale's subdirectory.
      subdirectory:
        type: optional<string>
        docs: The subdirectory path for the locale, used in URLs.
      tag:
        type: optional<string>
        docs: >-
          A tag or code representing the locale, often following a standard
          format like 'en-US'.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Locales:
    properties:
      primary:
        type: optional<Locale>
        docs: The primary locale for the site or application.
      secondary:
        type: optional<list<Locale>>
        docs: A list of secondary locales available for the site or application.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SiteDataCollectionType:
    enum:
      - always
      - optOut
      - disabled
    docs: The type of data collection enabled for the site.
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Site:
    properties:
      id:
        type: string
        docs: Unique identifier for the Site
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace
      createdOn:
        type: optional<datetime>
        docs: Date the Site was created
      displayName:
        type: optional<string>
        docs: Name given to Site
      shortName:
        type: optional<string>
        docs: Slugified version of name
      lastPublished:
        type: optional<datetime>
        docs: Date the Site was last published
      lastUpdated:
        type: optional<datetime>
        docs: Date the Site was last updated
      previewUrl:
        type: optional<string>
        docs: URL of a generated image for the given Site
        validation:
          format: uri
      timeZone:
        type: optional<string>
        docs: Site timezone set under Site Settings
      parentFolderId:
        type: optional<string>
        docs: The ID of the parent folder the Site exists in
      customDomains: optional<list<Domain>>
      locales: optional<Locales>
      dataCollectionEnabled:
        type: optional<boolean>
        docs: Indicates if data collection is enabled for the site.
      dataCollectionType:
        type: optional<SiteDataCollectionType>
        docs: The type of data collection enabled for the site.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  InvalidScopes: unknown
  NotEnterprisePlanWorkspace: unknown
  Sites:
    properties:
      sites: optional<list<Site>>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  NotEnterprisePlanSite: unknown
  Domains:
    properties:
      customDomains: optional<list<Domain>>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  InvalidDomain: unknown
  NoDomains: unknown
  Redirect:
    docs: A single redirection rule, specifying a source URL and a destination URL.
    properties:
      id:
        type: optional<string>
        docs: The ID of the specific redirect rule
      fromUrl:
        type: optional<string>
        docs: The source URL path that will be redirected.
      toUrl:
        type: optional<string>
        docs: The target URL path where the user or client will be redirected.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Pagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Redirects:
    docs: Site redirects response
    properties:
      redirects:
        type: optional<list<Redirect>>
        docs: List of redirects for a given site
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SitePlanId:
    enum:
      - value: hosting-basic-v3
        name: HostingBasicV3
      - value: hosting-cms-v3
        name: HostingCmsV3
      - value: hosting-business-v3
        name: HostingBusinessV3
      - value: hosting-ecommerce-standard-v2
        name: HostingEcommerceStandardV2
      - value: hosting-ecommerce-plus-v2
        name: HostingEcommercePlusV2
      - value: hosting-ecommerce-advanced-v2
        name: HostingEcommerceAdvancedV2
      - value: hosting-basic-v4
        name: HostingBasicV4
      - value: hosting-cms-v4
        name: HostingCmsV4
      - value: hosting-business-v4
        name: HostingBusinessV4
      - value: hosting-ecommerce-standard-v3
        name: HostingEcommerceStandardV3
      - value: hosting-ecommerce-plus-v3
        name: HostingEcommercePlusV3
      - value: hosting-ecommerce-advanced-v3
        name: HostingEcommerceAdvancedV3
    docs: ID of the hosting plan.
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SitePlanName:
    enum:
      - value: Basic Hosting
        name: BasicHosting
      - value: CMS Hosting
        name: CmsHosting
      - value: Business Hosting
        name: BusinessHosting
      - value: ECommerce Standard Hosting
        name: ECommerceStandardHosting
      - value: ECommerce Plus Hosting
        name: ECommercePlusHosting
      - value: ECommerce Advanced Hosting
        name: ECommerceAdvancedHosting
    docs: Name of the hosting plan.
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SitePlan:
    properties:
      id:
        type: optional<SitePlanId>
        docs: ID of the hosting plan.
      name:
        type: optional<SitePlanName>
        docs: Name of the hosting plan.
      pricingInfo:
        type: optional<string>
        docs: URL for more information about Webflow hosting plan pricing.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SiteActivityLogItemEvent:
    enum:
      - styles_modified
      - site_published
      - ix2_modified_on_page
      - page_dom_modified
      - cms_item
      - backup_created
      - page_custom_code_modified
      - symbols_modified
      - variable_modified
      - variables_modified
      - cms_collection
      - page_settings_modified
      - page_settings_custom_code_modified
      - ix2_modified_on_component
      - ix2_modified_on_class
      - site_custom_code_modified
      - page_duplicated
      - secondary_locale_page_content_modified
      - page_renamed
      - page_created
      - page_deleted
      - site_unpublished
      - backup_restored
      - locale_added
      - branch_created
      - locale_display_name_updated
      - locale_subdirectory_updated
      - branch_merged
      - locale_tag_updated
      - branch_deleted
      - locale_enabled
      - locale_removed
      - locale_disabled
      - library_shared
      - library_unshared
      - library_installed
      - library_uninstalled
      - library_update_shared
      - library_update_accepted
      - branch_review_created
      - branch_review_approved
      - branch_review_canceled
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SiteActivityLogItemResourceOperation:
    enum:
      - CREATED
      - MODIFIED
      - PUBLISHED
      - UNPUBLISHED
      - DELETED
      - GROUP_REORDERED
      - GROUP_CREATED
      - GROUP_DELETED
      - REORDERED
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SiteActivityLogItemUser:
    properties:
      id: optional<string>
      displayName: optional<string>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  SiteActivityLogItem:
    properties:
      id: optional<string>
      createdOn: optional<datetime>
      lastUpdated: optional<datetime>
      event: optional<SiteActivityLogItemEvent>
      resourceOperation: optional<SiteActivityLogItemResourceOperation>
      user: optional<SiteActivityLogItemUser>
      resourceId: optional<string>
      resourceName: optional<string>
      newValue: optional<string>
      previousValue: optional<string>
      payload: optional<map<string, unknown>>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SiteActivityLogResponse:
    properties:
      items: optional<list<SiteActivityLogItem>>
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  CollectionListArrayItem:
    docs: A collection object
    properties:
      id:
        type: string
        docs: Unique identifier for a Collection
      displayName:
        type: optional<string>
        docs: Name given to the Collection
      singularName:
        type: optional<string>
        docs: >-
          The name of one Item in Collection (e.g. ”Blog Post” if the Collection
          is called “Blog Posts”)
      slug:
        type: optional<string>
        docs: Slug of Collection in Site URL structure
      createdOn:
        type: optional<datetime>
        docs: The date the collection was created
      lastUpdated:
        type: optional<datetime>
        docs: The date the collection was last updated
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  CollectionList:
    properties:
      collections:
        type: optional<list<CollectionListArrayItem>>
        docs: An array of Collections
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  FieldType:
    enum:
      - Color
      - DateTime
      - Email
      - ExtFileRef
      - Image
      - Link
      - MultiImage
      - Number
      - Phone
      - PlainText
      - RichText
      - Switch
      - Video
    docs: Choose these appropriate field type for your collection data
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Field:
    docs: The details of a field in a collection
    properties:
      id:
        type: string
        docs: Unique identifier for a Field
      isRequired:
        type: boolean
        docs: define whether a field is required in a collection
      isEditable:
        type: optional<boolean>
        docs: Define whether the field is editable
      type:
        type: FieldType
        docs: Choose these appropriate field type for your collection data
      slug:
        type: optional<string>
        docs: >-
          Slug of Field in Site URL structure. Slugs should be all lowercase
          with no spaces. Any spaces will be converted to "-."
      displayName:
        type: string
        docs: The name of a field
      helpText:
        type: optional<string>
        docs: Additional text to help anyone filling out this field
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Collection:
    docs: A collection object
    properties:
      id:
        type: string
        docs: Unique identifier for a Collection
      displayName:
        type: optional<string>
        docs: Name given to the Collection
      singularName:
        type: optional<string>
        docs: >-
          The name of one Item in Collection (e.g. ”Blog Post” if the Collection
          is called “Blog Posts”)
      slug:
        type: optional<string>
        docs: Slug of Collection in Site URL structure
      createdOn:
        type: optional<datetime>
        docs: The date the collection was created
      lastUpdated:
        type: optional<datetime>
        docs: The date the collection was last updated
      fields:
        docs: The list of fields in the Collection
        type: list<Field>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  CollectionItemFieldData:
    properties:
      name:
        type: string
        docs: Name of the Item
      slug:
        type: string
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  CollectionItem:
    docs: >
      A Collection Item represents a single entry in your collection. Each item
      includes:


      - **System metadata** - Automatically managed fields like IDs and
      timestamp <br/>

      - **Status flags** - Controls for managing content state: `isDraft`,
      `isArchived `<br/> 

      - **Content fields** - Stored in `fieldData`. Each item needs a `name` and
      `slug`, and may include additional fields matching your collection's
      schema definition.
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: CollectionItemFieldData
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  CollectionItemListPagination:
    properties:
      limit:
        type: optional<double>
        docs: The limit specified in the request
        default: 100
      offset:
        type: optional<double>
        docs: The offset specified for pagination
        default: 0
      total:
        type: optional<double>
        docs: Total number of items in the collection
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  CollectionItemList:
    docs: Results from collection items list
    properties:
      items:
        type: optional<list<CollectionItem>>
        docs: List of Items within the collection
      pagination: optional<CollectionItemListPagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  CollectionItemPostSingleFieldData:
    properties:
      name:
        type: string
        docs: Name of the Item
      slug:
        type: string
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  CollectionItemPostSingle:
    docs: >
      A Collection Item represents a single entry in your collection. Each item
      includes:


      - **System metadata** - Automatically managed fields like IDs and
      timestamp <br/>

      - **Status flags** - Controls for managing content state: `isDraft`,
      `isArchived `<br/> 

      - **Content fields** - Stored in `fieldData`. Each item needs a `name` and
      `slug`, and may include additional fields matching your collection's
      schema definition.
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is in an archived state.
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is in a draft state.
        default: false
      fieldData: CollectionItemPostSingleFieldData
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  CollectionItemWithIdInputFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  CollectionItemWithIdInput:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
      fieldData: optional<CollectionItemWithIdInputFieldData>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  CollectionItemListNoPagination:
    docs: Results from collection items list
    properties:
      items:
        type: optional<list<CollectionItem>>
        docs: List of Items within the collection
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  BulkCollectionItemFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  BulkCollectionItem:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleIds:
        type: optional<list<string>>
        docs: Array of identifiers for the locales where the item will be created
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<BulkCollectionItemFieldData>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  CollectionItemPatchSingleFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  CollectionItemPatchSingle:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
      fieldData: optional<CollectionItemPatchSingleFieldData>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  PageSeo:
    docs: SEO-related fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The Page title shown in search engine results
      description:
        type: optional<string>
        docs: The Page description shown in search engine results
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  PageOpenGraph:
    docs: Open Graph fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The title supplied to Open Graph annotations
      titleCopied:
        type: optional<boolean>
        docs: Indicates the Open Graph title was copied from the SEO title
        default: true
      description:
        type: optional<string>
        docs: The description supplied to Open Graph annotations
      descriptionCopied:
        type: optional<boolean>
        docs: >-
          Indicates the Open Graph description was copied from the SEO
          description
        default: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  Page:
    docs: The Page object
    properties:
      id:
        type: string
        docs: Unique identifier for the Page
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site
      title:
        type: optional<string>
        docs: Title of the Page
      slug:
        type: optional<string>
        docs: slug of the Page (derived from title)
      parentId:
        type: optional<string>
        docs: Identifier of the parent folder
      collectionId:
        type: optional<string>
        docs: >-
          Unique identifier for a linked Collection, value will be null if the
          Page is not part of a Collection.
      createdOn:
        type: optional<datetime>
        docs: The date the Page was created
      lastUpdated:
        type: optional<datetime>
        docs: The date the Page was most recently updated
      archived:
        type: optional<boolean>
        docs: Whether the Page has been archived
        default: false
      draft:
        type: optional<boolean>
        docs: Whether the Page is a draft
        default: false
      canBranch:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page supports [Page
          Branching](https://university.webflow.com/lesson/page-branching)
        default: false
      isBranch:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page is a Branch of another Page [Page
          Branching](https://university.webflow.com/lesson/page-branching)
        default: false
      isMembersOnly:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page is restricted by [Memberships
          Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)
        default: false
      seo:
        type: optional<PageSeo>
        docs: SEO-related fields for the Page
      openGraph:
        type: optional<PageOpenGraph>
        docs: Open Graph fields for the Page
      localeId:
        type: optional<string>
        docs: Unique ID of the page locale
      publishedPath:
        type: optional<string>
        docs: Relative path of the published page URL
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  PageList:
    docs: The Page object
    properties:
      pages: optional<list<Page>>
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  TextNodeText:
    properties:
      html:
        type: optional<string>
        docs: The HTML content of the text node.
      text:
        type: optional<string>
        docs: The raw text content of the text node.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  TextNode:
    docs: >
      Represents text content within the DOM. It contains both the raw text and
      its HTML representation. Additional attributes can be associated with the
      text for styling or other purposes.
    properties:
      id:
        type: optional<string>
        docs: Node UUID
      text: optional<TextNodeText>
      attributes:
        type: optional<map<string, string>>
        docs: The custom attributes of the node
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ImageNodeImage:
    properties:
      alt: optional<string>
      assetId: optional<string>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  ImageNode:
    docs: >
      Represents an image within the DOM. It contains details about the image,
      such as its alternative text (alt) for accessibility and an asset
      identifier for fetching the actual image resource. Additional attributes
      can be associated with the image for styling or other purposes.
    properties:
      id:
        type: optional<string>
        docs: Node UUID
      image: optional<ImageNodeImage>
      attributes:
        type: optional<map<string, string>>
        docs: The custom attributes of the node
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Text:
    properties:
      html:
        type: optional<string>
        docs: The HTML content of the text node.
      text:
        type: optional<string>
        docs: The raw text content of the text node.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ComponentPropertyType:
    enum:
      - value: Plain Text
        name: PlainText
      - value: Rich Text
        name: RichText
      - value: Alt Text
        name: AltText
    docs: The type of the property.
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ComponentProperty:
    docs: >
      Represents a property of a component instance in the DOM. A property
      contains a list of both the raw text and the HTML representation, allowing
      for flexibility in rendering and processing. Additional attributes can be
      associated with the text for styling or other purposes.
    properties:
      propertyId:
        type: optional<string>
        docs: The ID of the property.
      type:
        type: optional<ComponentPropertyType>
        docs: The type of the property.
      label:
        type: optional<string>
        docs: The label of the property in the UI.
      text:
        type: optional<Text>
        docs: >-
          Represents text content within the DOM. It contains both the raw text
          and its HTML representation.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ComponentNode:
    docs: >
      Represents a component instance within the DOM. It contains details about
      the component instance, such as its type and properties.
    properties:
      id:
        type: optional<string>
        docs: Node UUID
      componentId:
        type: optional<string>
        docs: Component ID
      propertyOverrides:
        type: optional<list<ComponentProperty>>
        docs: List of component properties with overrides for a component instance.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Node:
    discriminant: type
    base-properties: {}
    docs: >
      A generic representation of a content element within the Document Object
      Model (DOM). Each node has a unique identifier and a specific type that
      determines its content structure and attributes.
    union:
      text: TextNode
      image: ImageNode
      component-instance: ComponentNode
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Dom:
    docs: >
      The DOM (Document Object Model) schema represents the content structure of
      a web page or component. It captures various content nodes along with
      their associated attributes. Each node has a unique identifier and can be
      of different types like text, image or component-instance. The schema also
      provides pagination details for scenarios where the content nodes are too
      many to be fetched in a single request.
    properties:
      pageId:
        type: optional<string>
        docs: Page ID
      nodes: optional<list<Node>>
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  TextNodeWrite:
    docs: Update a text node
    properties:
      nodeId:
        type: string
        docs: Node UUID
      text:
        type: string
        docs: >-
          HTML content of the node, including the HTML tag. The HTML tags must
          be the same as what's returned from the Get Content endpoint.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ComponentInstanceNodePropertyOverridesWritePropertyOverridesItem:
    properties:
      propertyId:
        type: string
        docs: The ID of the property.
      text:
        type: string
        docs: >
          The new string or HTML value used to override the component instance
          property value. 

          The provided value must be compatible with the type of the component
          instance property. 

          For example, attempting to override a single-line plain-text property
          with a multi-line 

          value will result in an error.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  ComponentInstanceNodePropertyOverridesWrite:
    docs: Update text property overrides of a component instance
    properties:
      nodeId:
        type: string
        docs: Node UUID
      propertyOverrides:
        docs: >-
          A list of component instance properties to override within the
          specified secondary locale.
        type: list<ComponentInstanceNodePropertyOverridesWritePropertyOverridesItem>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Component:
    docs: The Component object
    properties:
      id:
        type: string
        docs: Unique identifier for the Component
      name:
        type: optional<string>
        docs: Component Name
      group:
        type: optional<string>
        docs: The group that the component belongs to
      description:
        type: optional<string>
        docs: Component Description
      readonly:
        type: optional<boolean>
        docs: >-
          Indicates whether the component is read-only. Components that cannot
          be updated within this Site are set to readonly. Workspace Libraries
          are a good example.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ComponentList:
    docs: List of Components on a site.
    properties:
      components: optional<list<Component>>
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ComponentDom:
    docs: >
      The Component DOM schema represents the content structure of a component.
      Similar to Page DOM, it captures various content nodes and their
      associated attributes, but specifically for a component's structure. Each
      node has a unique identifier and  can contain text, images, or nested
      component instances.
    properties:
      componentId:
        type: optional<string>
        docs: Component ID
      nodes: optional<list<Node>>
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ComponentProperties:
    docs: >
      The Component Properties schema represents a list of properties that store
      text content. Each property has a unique identifier and can be of
      different types like plain text or rich text. The schema also provides
      pagination details for scenarios where there more properties than the
      limit.
    properties:
      componentId:
        type: optional<string>
        docs: Component ID
      properties: optional<list<ComponentProperty>>
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ScriptApplyLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ScriptApply:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: ScriptApplyLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ScriptApplyList:
    properties:
      scripts:
        type: optional<list<ScriptApply>>
        docs: A list of scripts applied to a Site or a Page
      lastUpdated:
        type: optional<string>
        docs: Date when the Site's scripts were last updated
      createdOn:
        type: optional<string>
        docs: Date when the Site's scripts were created
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  CustomCodeHostedResponse:
    docs: Registered custom code for application
    properties:
      id:
        type: optional<string>
        docs: Human readable id, derived from the user-specified display name
      canCopy:
        type: optional<boolean>
        docs: >-
          Define whether the script can be copied on site duplication and
          transfer
        default: false
      displayName:
        type: optional<string>
        docs: >-
          User-facing name for the script. Must be between 1 and 50 alphanumeric
          characters
      hostedLocation:
        type: optional<string>
        docs: URI for an externally hosted script location
      integrityHash:
        type: optional<string>
        docs: >-
          Sub-Resource Integrity Hash. Only required for externally hosted
          scripts (passed via hostedLocation)
      createdOn:
        type: optional<string>
        docs: Timestamp when the script version was created
      lastUpdated:
        type: optional<string>
        docs: Timestamp when the script version was last updated
      version:
        type: optional<string>
        docs: A Semantic Version (SemVer) string, denoting the version of the script
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  RegisteredScriptList:
    docs: A list of scripts registered to the site
    properties:
      registeredScripts: optional<list<CustomCodeHostedResponse>>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  CustomCodeInlineResponse:
    docs: Registered custom code for application
    properties:
      id:
        type: optional<string>
        docs: Human readable id, derived from the user-specified display name
      canCopy:
        type: optional<boolean>
        docs: >-
          Define whether the script can be copied on site duplication and
          transfer
        default: false
      displayName:
        type: optional<string>
        docs: >-
          User-facing name for the script. Must be between 1 and 50 alphanumeric
          characters
      hostedLocation:
        type: optional<string>
        docs: URI for an externally hosted script location
      integrityHash:
        type: optional<string>
        docs: >-
          Sub-Resource Integrity Hash. Only required for externally hosted
          scripts (passed via hostedLocation)
      createdOn:
        type: optional<string>
        docs: Timestamp when the script version was created
      lastUpdated:
        type: optional<string>
        docs: Timestamp when the script version was last updated
      version:
        type: optional<string>
        docs: A Semantic Version (SemVer) string, denoting the version of the script
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Scripts:
    docs: A list of scripts applied to a Site or a Page
    type: list<ScriptApply>
  CustomCodeBlockType:
    enum:
      - page
      - site
    docs: Whether the Custom Code script is applied at the Site-level or Page-level
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  CustomCodeBlock:
    docs: A specific instance of Custom Code applied to a Site or Page
    properties:
      siteId:
        type: optional<string>
        docs: The Site ID where the custom code was applied
      pageId:
        type: optional<string>
        docs: The Page ID (if applied at Page-level)
      type:
        type: optional<CustomCodeBlockType>
        docs: >-
          Whether the Custom Code script is applied at the Site-level or
          Page-level
      scripts: optional<Scripts>
      createdOn:
        type: optional<datetime>
        docs: The date the Block was created
      lastUpdated:
        type: optional<datetime>
        docs: The date the Block was most recently updated
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ListCustomCodeBlocks:
    docs: Custom Code Blocks corresponding to where scripts were applied
    properties:
      blocks: optional<list<CustomCodeBlock>>
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  AssetVariant:
    properties:
      hostedUrl:
        type: optional<string>
        docs: URL of where the asset variant is hosted
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name of the variant
      displayName:
        type: optional<string>
        docs: Display name of the variant
      format:
        type: optional<string>
        docs: format of the variant
      width:
        type: optional<integer>
        docs: Width in pixels
      height:
        type: optional<integer>
        docs: Height in pixels
      quality:
        type: optional<integer>
        docs: Value between 0 and 100 representing the image quality
      error:
        type: optional<string>
        docs: Any associated validation errors
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Asset:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for this asset
      contentType:
        type: optional<string>
        docs: File format type
      size:
        type: optional<integer>
        docs: size in bytes
      siteId:
        type: optional<string>
        docs: Unique identifier for the site that hosts this asset
      hostedUrl:
        type: optional<string>
        docs: Link to the asset
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name at the time of upload
      displayName:
        type: optional<string>
        docs: Display name of the asset
      lastUpdated:
        type: optional<datetime>
        docs: Date the asset metadata was last updated
      createdOn:
        type: optional<datetime>
        docs: Date the asset metadata was created
      variants: optional<list<AssetVariant>>
      altText:
        type: optional<string>
        docs: The visual description of the asset
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Assets:
    docs: A list of assets
    properties:
      assets: optional<list<Asset>>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  AssetUploadUploadDetails:
    docs: Metadata for uploading the asset binary
    properties:
      acl: optional<string>
      bucket: optional<string>
      X-Amz-Algorithm: optional<string>
      X-Amz-Credential: optional<string>
      X-Amz-Date: optional<string>
      key: optional<string>
      Policy: optional<string>
      X-Amz-Signature: optional<string>
      success_action_status: optional<string>
      content-type: optional<string>
      Cache-Control: optional<string>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  AssetUpload:
    properties:
      uploadDetails:
        type: optional<AssetUploadUploadDetails>
        docs: Metadata for uploading the asset binary
      contentType: optional<string>
      id: optional<string>
      parentFolder:
        type: optional<string>
        docs: Parent folder for the asset
      uploadUrl:
        type: optional<string>
        validation:
          format: uri
      assetUrl:
        type: optional<string>
        docs: S3 link to the asset
        validation:
          format: uri
      hostedUrl:
        type: optional<string>
        docs: Represents the link to the asset
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: >-
          Original file name when uploaded. If not specified at time of upload,
          it may be extracted from the raw file name
      createdOn:
        type: optional<datetime>
        docs: Date the asset metadata was created
      lastUpdated:
        type: optional<datetime>
        docs: Date the asset metadata was last updated
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  AssetFolder:
    docs: Asset Folder details
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Asset Folder
      displayName:
        type: optional<string>
        docs: User visible name for the Asset Folder
      parentFolder:
        type: optional<string>
        docs: Pointer to parent Asset Folder (or null if root)
      assets:
        type: optional<list<string>>
        docs: Array of Asset instances in the folder
      siteId:
        type: optional<string>
        docs: The unique ID of the site the Asset Folder belongs to
      createdOn:
        type: optional<datetime>
        docs: Date that the Asset Folder was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Asset Folder was last updated on
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  AssetFolderList:
    docs: The Asset Folders object
    properties:
      assetFolders:
        type: optional<list<AssetFolder>>
        docs: A list of Asset folders
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  TriggerType:
    enum:
      - form_submission
      - site_publish
      - page_created
      - page_metadata_updated
      - page_deleted
      - ecomm_new_order
      - ecomm_order_changed
      - ecomm_inventory_changed
      - user_account_added
      - user_account_updated
      - user_account_deleted
      - collection_item_created
      - collection_item_changed
      - collection_item_deleted
      - collection_item_unpublished
    docs: >
      * `form_submission` - Sends the [form_submission](#form_submission) event

      * `site_publish` - Sends a [site_publish](#site_publish) event

      * `page_created` - Send the [page_created](#page_created) event

      * `page_metadata_updated` - Sends the
      [page_metadata_updated](#page_metadata_updated) event

      * `page_deleted` - Sends the [page_deleted](#page_deleted) event

      * `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order)
      event

      * `ecomm_order_changed` - Sends the
      [ecomm_order_changed](#ecomm_order_changed) event

      * `ecomm_inventory_changed` - Sends the
      [ecomm_inventory_changed](#ecomm_inventory_changed) event

      * `user_account_added` - Sends the
      [user_account_added](#user_account_added) event

      * `user_account_updated` - Sends the
      [user_account_updated](#user_account_updated) event

      * `user_account_deleted` - Sends the
      [user_account_deleted](#user_account_deleted) event

      * `collection_item_created` - Sends the
      [collection_item_created](#collection_item_created) event

      * `collection_item_changed` - Sends the
      [collection_item_changed](#collection_item_changed) event

      * `collection_item_deleted` - Sends the
      [collection_item_deleted](#collection_item_deleted) event

      * `collection_item_unpublished` - Sends the
      [collection_item_unpublished](#collection_item_unpublished) event
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  WebhookFilter:
    docs: >-
      Only supported for the `form_submission` trigger type. Filter for the form
      you want Webhooks to be sent for.
    properties:
      name:
        type: optional<string>
        docs: The name of the form you'd like to recieve notifications for.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  Webhook:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Webhook registration
      triggerType: optional<TriggerType>
      url:
        type: optional<string>
        docs: URL to send the Webhook payload to
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace the Webhook is registered in
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site the Webhook is registered in
      filter:
        type: optional<WebhookFilter>
        docs: >-
          Only supported for the `form_submission` trigger type. Filter for the
          form you want Webhooks to be sent for.
      lastTriggered:
        type: optional<datetime>
        docs: Date the Webhook instance was last triggered
      createdOn:
        type: optional<datetime>
        docs: Date the Webhook registration was created
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  WebhookList:
    properties:
      pagination: optional<Pagination>
      webhooks: optional<list<Webhook>>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  FormFieldValueType:
    enum:
      - Plain
      - Email
      - Password
      - Phone
      - Number
    docs: The field type
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  FormFieldValue:
    docs: An object containing field info for a specific fieldID.
    properties:
      displayName:
        type: optional<string>
        docs: The field name displayed on the site
      type:
        type: optional<FormFieldValueType>
        docs: The field type
      placeholder:
        type: optional<string>
        docs: The placeholder text for the field
      userVisible:
        type: optional<boolean>
        docs: Whether the field is visible to the user
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  FormField:
    type: map<string, FormFieldValue>
    docs: A collection of form fields with additional properties.
  FormResponseSettings:
    docs: Settings for form responses
    properties:
      redirectUrl:
        type: optional<string>
        docs: The url or path to redirect the user to after form submission
      redirectMethod:
        type: optional<string>
        docs: The HTTP request method to use for the redirectUrl (eg. POST or GET)
      redirectAction:
        type: optional<string>
        docs: The action to take after form submission
      sendEmailConfirmation:
        type: optional<boolean>
        docs: Whether to send an email confirmation to the user
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  Form:
    docs: A Webflow form
    properties:
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      createdOn:
        type: optional<datetime>
        docs: Date that the Form was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Form was last updated on
      fields:
        type: optional<FormField>
        docs: A collection of form field objects
      responseSettings:
        type: optional<FormResponseSettings>
        docs: Settings for form responses
      id:
        type: optional<string>
        docs: The unique ID for the Form
      siteId:
        type: optional<string>
        docs: The unique ID of the Site the Form belongs to
      siteDomainId:
        type: optional<string>
        docs: The unique ID corresponding to the site's Domain name
      pageId:
        type: optional<string>
        docs: The unique ID for the Page on which the Form is placed
      pageName:
        type: optional<string>
        docs: The user-visible name of the Page where the Form is placed
      formElementId:
        type: optional<string>
        docs: The unique ID of the Form element
      workspaceId:
        type: optional<string>
        docs: The unique ID of the Workspace the Site belongs to
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  FormList:
    properties:
      forms: optional<list<Form>>
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  FormSubmission:
    properties:
      id:
        type: optional<string>
        docs: The unique ID of the Form submission
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      siteId:
        type: optional<string>
        docs: The unique ID of the Site the Form belongs to
      workspaceId:
        type: optional<string>
        docs: The unique ID of the Workspace the Site belongs to
      dateSubmitted:
        type: optional<datetime>
        docs: Date that the Form was submitted on
      formResponse:
        type: optional<map<string, unknown>>
        docs: The data submitted in the Form
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  FormSubmissionList:
    properties:
      formSubmissions: optional<list<FormSubmission>>
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  UserDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  UserData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UserDataData>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  UserStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  UserAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  UserAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UserAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  User:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
      status:
        type: optional<UserStatus>
        docs: The status of the user
      accessGroups:
        type: optional<list<UserAccessGroupsItem>>
        docs: Access groups the user belongs to
      data: optional<UserData>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  UserList:
    docs: The list users results
    properties:
      count:
        type: optional<double>
        docs: Number of users returned
      limit:
        type: optional<double>
        docs: The limit specified in the request
        default: 10
      offset:
        type: optional<double>
        docs: The offset specified for pagination
        default: 0
      total:
        type: optional<double>
        docs: Total number of users in the collection
      users:
        type: optional<list<User>>
        docs: List of Users for a Site
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  UsersNotEnabled: unknown
  DuplicateUserEmail: unknown
  UserLimitReached: unknown
  AccessGroup:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Access Group
      name:
        type: optional<string>
        docs: Name of the the Access Group
      shortId:
        type: optional<string>
        docs: >-
          Shortened unique identifier based on name, optimized for its use in
          the user’s JWT
      slug:
        type: optional<string>
        docs: >-
          Shortened unique identifier based on name, optimized for human
          readability and public API use
      createdOn:
        type: optional<datetime>
        docs: The date the Access Group was created
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  AccessGroupList:
    docs: The list access groups results
    properties:
      count:
        type: optional<double>
        docs: Number of access groups returned
      limit:
        type: optional<double>
        docs: The limit specified in the request
        default: 10
      offset:
        type: optional<double>
        docs: The offset specified for pagination
        default: 0
      total:
        type: optional<double>
        docs: Total number of access groups in the collection
      accessGroups:
        type: optional<list<AccessGroup>>
        docs: List of Site Access Groups
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SkuPropertyListEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  SkuPropertyList:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: list<SkuPropertyListEnumItem>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ProductFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ProductFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ProductFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: optional<list<SkuPropertyList>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<ProductFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<ProductFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Product:
    docs: The Product object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to draft
        default: false
      fieldData: optional<ProductFieldData>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SkuValueList:
    type: map<string, string>
    docs: >
      A dictionary that maps a SKU property to a SKU value. The key of the
      dictionary is the SKU property ID, and the value is the SKU value ID.
  SkuFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  SkuFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  SkuFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SkuFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SkuFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  SkuFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: optional<SkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  SkuFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: optional<SkuFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans: optional<list<SkuFieldDataEcSkuSubscriptionPlanPlansItem>>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  SkuFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values: optional<SkuValueList>
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: SkuFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<SkuFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<SkuFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<SkuFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  Sku:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      fieldData: optional<SkuFieldData>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ProductAndSkUs:
    docs: A product and its SKUs.
    properties:
      product: optional<Product>
      skus:
        type: optional<list<Sku>>
        docs: A list of SKU Objects
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  ProductAndSkUsList:
    docs: Results from product list
    properties:
      items:
        type: optional<list<ProductAndSkUs>>
        docs: >-
          List of Item objects within the Collection. Contains product and skus
          keys for each Item
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  PublishStatus:
    enum:
      - staging
      - live
    docs: Indicate whether your Product should be set as "staging" or "live"
    default: staging
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  OrderPrice:
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  OrderAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  OrderAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  OrderAddress:
    docs: A customer address
    properties:
      type:
        type: optional<OrderAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrderAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  OrderPurchasedItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  OrderPurchasedItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: optional<list<OrderPurchasedItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  OrderPurchasedItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<OrderPurchasedItemVariantImageFile>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  OrderPurchasedItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<OrderPrice>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<OrderPurchasedItemVariantImage>
      variantPrice:
        type: optional<OrderPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<double>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<double>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<double>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<double>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  StripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<string>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<string>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<string>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<string>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<string>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<string>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  StripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  StripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  StripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<StripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<StripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  PaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  OrderStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  OrderDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  OrderCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  OrderMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  OrderTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  OrderTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<OrderTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<OrderPrice>
        docs: The price for the item
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  OrderTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<OrderPrice>
        docs: The subtotal price
      extras:
        type: optional<list<OrderTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<OrderPrice>
        docs: The total price
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  OrderDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
    inline: true
  Order:
    properties:
      orderId:
        type: optional<string>
        docs: |
          The order ID. Will usually be 6 hex characters, but can also be 9
          hex characters if the site has a very large number of Orders.
          Randomly assigned.
      status:
        type: optional<OrderStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<datetime>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<datetime>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<datetime>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<OrderDisputeLastStatus>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<OrderPrice>
        docs: The total paid by the customer
      netAmount:
        type: optional<OrderPrice>
        docs: The net amount after application fees
      applicationFee:
        type: optional<OrderPrice>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<OrderAddress>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<OrderAddress>
        docs: The shipping address
      billingAddress:
        type: optional<OrderAddress>
        docs: The billing address
      shippingProvider:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<string>
        validation:
          format: uri
      customerInfo:
        type: optional<OrderCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<OrderPurchasedItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails: optional<StripeDetails>
      stripeCard: optional<StripeCard>
      paypalDetails: optional<PaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<OrderMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<OrderTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<OrderDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  OrderList:
    docs: Results from order list
    properties:
      orders:
        type: optional<list<Order>>
        docs: List of orders
      pagination: optional<Pagination>
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  InventoryItemInventoryType:
    enum:
      - infinite
      - finite
    docs: infinite or finite
    inline: true
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  InventoryItem:
    docs: The availabile inventory for an item
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a SKU item
      quantity:
        type: optional<double>
        docs: >-
          Total quantity of items remaining in inventory (if inventoryType is
          finite)
      inventoryType:
        type: optional<InventoryItemInventoryType>
        docs: infinite or finite
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
  EcommerceSettings:
    docs: Ecommerce settings for a Webflow Site
    properties:
      siteId:
        type: optional<string>
        docs: The identifier of the Site
      createdOn:
        type: optional<datetime>
        docs: Date that the Site was created on
      defaultCurrency:
        type: optional<string>
        docs: The three-letter ISO currency code for the Site
    source:
      openapi: ../../../openapi/referenced-specs/v2.yml
