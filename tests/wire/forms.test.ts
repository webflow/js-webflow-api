/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { WebflowClient } from "../../src/Client";

describe("Forms", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new WebflowClient({
            accessToken: "test",
            environment: {
                base: server.baseUrl,
                dataApi: server.baseUrl,
                contentDeliveryApi: server.baseUrl,
                production: server.baseUrl,
                cdn: server.baseUrl,
            },
        });

        const rawResponseBody = {
            forms: [
                {
                    displayName: "Email Form",
                    createdOn: "2016-10-24T19:41:29Z",
                    lastUpdated: "2016-10-24T19:43:17Z",
                    fields: {
                        "0": { displayName: "Email", userVisible: true },
                        "1": { displayName: "Email", userVisible: true },
                    },
                    responseSettings: {
                        redirectUrl: "https://example.com",
                        redirectMethod: "GET",
                        sendEmailConfirmation: true,
                    },
                    id: "589a331aa51e760df7ccb89e",
                    siteId: "580e63e98c9a982ac9b8b741",
                    siteDomainId: "6419db964a9c436a4baf6248",
                    pageId: "6419db964a9c43f6a3af6348",
                    pageName: "Home",
                    formElementId: "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                    workspaceId: "580e63fc8c9a982ac9b8b744",
                },
                {
                    displayName: "Name Form",
                    createdOn: "2016-10-24T19:41:29Z",
                    lastUpdated: "2016-10-24T19:43:17Z",
                    fields: { "0": { displayName: "Email", userVisible: true } },
                    responseSettings: {
                        redirectUrl: "https://example.com",
                        redirectMethod: "GET",
                        sendEmailConfirmation: false,
                    },
                    id: "580ff8d7ba3e45ba9fe588e9",
                    siteId: "580e63e98c9a982ac9b8b741",
                    siteDomainId: "6419db964a9c436a4baf6248",
                    pageId: "6419db964a9c43f6a3af6348",
                    pageName: "Home",
                    formElementId: "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                    workspaceId: "580e63fc8c9a982ac9b8b744",
                },
            ],
            pagination: { limit: 25, offset: 0, total: 2 },
        };
        server
            .mockEndpoint()
            .get("/sites/580e63e98c9a982ac9b8b741/forms")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.forms.list("580e63e98c9a982ac9b8b741");
        expect(response).toEqual({
            forms: [
                {
                    displayName: "Email Form",
                    createdOn: new Date("2016-10-24T19:41:29.000Z"),
                    lastUpdated: new Date("2016-10-24T19:43:17.000Z"),
                    fields: {
                        "0": {
                            displayName: "Email",
                            userVisible: true,
                        },
                        "1": {
                            displayName: "Email",
                            userVisible: true,
                        },
                    },
                    responseSettings: {
                        redirectUrl: "https://example.com",
                        redirectMethod: "GET",
                        sendEmailConfirmation: true,
                    },
                    id: "589a331aa51e760df7ccb89e",
                    siteId: "580e63e98c9a982ac9b8b741",
                    siteDomainId: "6419db964a9c436a4baf6248",
                    pageId: "6419db964a9c43f6a3af6348",
                    pageName: "Home",
                    formElementId: "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                    workspaceId: "580e63fc8c9a982ac9b8b744",
                },
                {
                    displayName: "Name Form",
                    createdOn: new Date("2016-10-24T19:41:29.000Z"),
                    lastUpdated: new Date("2016-10-24T19:43:17.000Z"),
                    fields: {
                        "0": {
                            displayName: "Email",
                            userVisible: true,
                        },
                    },
                    responseSettings: {
                        redirectUrl: "https://example.com",
                        redirectMethod: "GET",
                        sendEmailConfirmation: false,
                    },
                    id: "580ff8d7ba3e45ba9fe588e9",
                    siteId: "580e63e98c9a982ac9b8b741",
                    siteDomainId: "6419db964a9c436a4baf6248",
                    pageId: "6419db964a9c43f6a3af6348",
                    pageName: "Home",
                    formElementId: "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                    workspaceId: "580e63fc8c9a982ac9b8b744",
                },
            ],
            pagination: {
                limit: 25,
                offset: 0,
                total: 2,
            },
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new WebflowClient({
            accessToken: "test",
            environment: {
                base: server.baseUrl,
                dataApi: server.baseUrl,
                contentDeliveryApi: server.baseUrl,
                production: server.baseUrl,
                cdn: server.baseUrl,
            },
        });

        const rawResponseBody = {
            displayName: "Email Form",
            createdOn: "2016-10-24T19:41:29Z",
            lastUpdated: "2016-10-24T19:43:17Z",
            fields: {
                "660d5bcc9c0772150459dfb1": { displayName: "Name", type: "Plain", userVisible: true },
                "589a331aa51e760df7ccb89d": {
                    displayName: "Email",
                    type: "Email",
                    placeholder: "Enter your email",
                    userVisible: true,
                },
            },
            responseSettings: {
                redirectUrl: "https://example.com",
                redirectMethod: "GET",
                sendEmailConfirmation: true,
            },
            id: "589a331aa51e760df7ccb89e",
            siteId: "580e63e98c9a982ac9b8b741",
            siteDomainId: "6419db964a9c436a4baf6248",
            pageId: "6419db964a9c43f6a3af6348",
            pageName: "Home",
            formElementId: "4e038d2c-6a1e-4953-7be9-a59a2b453177",
            workspaceId: "580e63fc8c9a982ac9b8b744",
        };
        server
            .mockEndpoint()
            .get("/forms/580e63e98c9a982ac9b8b741")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.forms.get("580e63e98c9a982ac9b8b741");
        expect(response).toEqual({
            displayName: "Email Form",
            createdOn: new Date("2016-10-24T19:41:29.000Z"),
            lastUpdated: new Date("2016-10-24T19:43:17.000Z"),
            fields: {
                "660d5bcc9c0772150459dfb1": {
                    displayName: "Name",
                    type: "Plain",
                    userVisible: true,
                },
                "589a331aa51e760df7ccb89d": {
                    displayName: "Email",
                    type: "Email",
                    placeholder: "Enter your email",
                    userVisible: true,
                },
            },
            responseSettings: {
                redirectUrl: "https://example.com",
                redirectMethod: "GET",
                sendEmailConfirmation: true,
            },
            id: "589a331aa51e760df7ccb89e",
            siteId: "580e63e98c9a982ac9b8b741",
            siteDomainId: "6419db964a9c436a4baf6248",
            pageId: "6419db964a9c43f6a3af6348",
            pageName: "Home",
            formElementId: "4e038d2c-6a1e-4953-7be9-a59a2b453177",
            workspaceId: "580e63fc8c9a982ac9b8b744",
        });
    });

    test("list-submissions", async () => {
        const server = mockServerPool.createServer();
        const client = new WebflowClient({
            accessToken: "test",
            environment: {
                base: server.baseUrl,
                dataApi: server.baseUrl,
                contentDeliveryApi: server.baseUrl,
                production: server.baseUrl,
                cdn: server.baseUrl,
            },
        });

        const rawResponseBody = {
            formSubmissions: [
                {
                    id: "6321ca84df3949bfc6752327",
                    displayName: "Sample Form",
                    siteId: "62749158efef318abc8d5a0f",
                    workspaceId: "62749158efef318abc8d5a0f",
                    dateSubmitted: "2022-09-14T12:35:16Z",
                    formResponse: { "First Name": "Arthur", "Last Name": "Dent" },
                },
                {
                    id: "660d64fabf6e0a0d4edab981",
                    displayName: "Sample Form",
                    siteId: "62749158efef318abc8d5a0f",
                    workspaceId: "62749158efef318abc8d5a0f",
                    dateSubmitted: "2022-09-14T12:35:16Z",
                    formResponse: { "First Name": "Ford", "Last Name": "Prefect" },
                },
            ],
            pagination: { limit: 25, offset: 0, total: 2 },
        };
        server
            .mockEndpoint()
            .get("/forms/580e63e98c9a982ac9b8b741/submissions")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.forms.listSubmissions("580e63e98c9a982ac9b8b741");
        expect(response).toEqual({
            formSubmissions: [
                {
                    id: "6321ca84df3949bfc6752327",
                    displayName: "Sample Form",
                    siteId: "62749158efef318abc8d5a0f",
                    workspaceId: "62749158efef318abc8d5a0f",
                    dateSubmitted: new Date("2022-09-14T12:35:16.000Z"),
                    formResponse: {
                        "First Name": "Arthur",
                        "Last Name": "Dent",
                    },
                },
                {
                    id: "660d64fabf6e0a0d4edab981",
                    displayName: "Sample Form",
                    siteId: "62749158efef318abc8d5a0f",
                    workspaceId: "62749158efef318abc8d5a0f",
                    dateSubmitted: new Date("2022-09-14T12:35:16.000Z"),
                    formResponse: {
                        "First Name": "Ford",
                        "Last Name": "Prefect",
                    },
                },
            ],
            pagination: {
                limit: 25,
                offset: 0,
                total: 2,
            },
        });
    });

    test("get-submission", async () => {
        const server = mockServerPool.createServer();
        const client = new WebflowClient({
            accessToken: "test",
            environment: {
                base: server.baseUrl,
                dataApi: server.baseUrl,
                contentDeliveryApi: server.baseUrl,
                production: server.baseUrl,
                cdn: server.baseUrl,
            },
        });

        const rawResponseBody = {
            id: "6321ca84df3949bfc6752327",
            displayName: "Sample Form",
            siteId: "62749158efef318abc8d5a0f",
            workspaceId: "62749158efef318abc8d5a0f",
            dateSubmitted: "2022-09-14T12:35:16Z",
            formResponse: { "First Name": "Arthur", "Last Name": "Dent" },
        };
        server
            .mockEndpoint()
            .get("/form_submissions/580e63e98c9a982ac9b8b741")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.forms.getSubmission("580e63e98c9a982ac9b8b741");
        expect(response).toEqual({
            id: "6321ca84df3949bfc6752327",
            displayName: "Sample Form",
            siteId: "62749158efef318abc8d5a0f",
            workspaceId: "62749158efef318abc8d5a0f",
            dateSubmitted: new Date("2022-09-14T12:35:16.000Z"),
            formResponse: {
                "First Name": "Arthur",
                "Last Name": "Dent",
            },
        });
    });

    test("delete-submission", async () => {
        const server = mockServerPool.createServer();
        const client = new WebflowClient({
            accessToken: "test",
            environment: {
                base: server.baseUrl,
                dataApi: server.baseUrl,
                contentDeliveryApi: server.baseUrl,
                production: server.baseUrl,
                cdn: server.baseUrl,
            },
        });

        server
            .mockEndpoint()
            .delete("/form_submissions/580e63e98c9a982ac9b8b741")
            .respondWith()
            .statusCode(200)
            .build();

        const response = await client.forms.deleteSubmission("580e63e98c9a982ac9b8b741");
        expect(response).toEqual(undefined);
    });

    test("update-submission", async () => {
        const server = mockServerPool.createServer();
        const client = new WebflowClient({
            accessToken: "test",
            environment: {
                base: server.baseUrl,
                dataApi: server.baseUrl,
                contentDeliveryApi: server.baseUrl,
                production: server.baseUrl,
                cdn: server.baseUrl,
            },
        });
        const rawRequestBody = {};
        const rawResponseBody = {
            id: "6321ca84df3949bfc6752327",
            displayName: "Sample Form",
            siteId: "62749158efef318abc8d5a0f",
            workspaceId: "62749158efef318abc8d5a0f",
            dateSubmitted: "2022-09-14T12:35:16Z",
            formResponse: { "First Name": "Arthur", "Last Name": "Dent" },
        };
        server
            .mockEndpoint()
            .patch("/form_submissions/580e63e98c9a982ac9b8b741")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.forms.updateSubmission("580e63e98c9a982ac9b8b741");
        expect(response).toEqual({
            id: "6321ca84df3949bfc6752327",
            displayName: "Sample Form",
            siteId: "62749158efef318abc8d5a0f",
            workspaceId: "62749158efef318abc8d5a0f",
            dateSubmitted: new Date("2022-09-14T12:35:16.000Z"),
            formResponse: {
                "First Name": "Arthur",
                "Last Name": "Dent",
            },
        });
    });

    test("list-submissions-by-site", async () => {
        const server = mockServerPool.createServer();
        const client = new WebflowClient({
            accessToken: "test",
            environment: {
                base: server.baseUrl,
                dataApi: server.baseUrl,
                contentDeliveryApi: server.baseUrl,
                production: server.baseUrl,
                cdn: server.baseUrl,
            },
        });

        const rawResponseBody = {
            formSubmissions: [
                {
                    id: "6321ca84df3949bfc6752327",
                    displayName: "Sample Form",
                    siteId: "62749158efef318abc8d5a0f",
                    workspaceId: "62749158efef318abc8d5a0f",
                    dateSubmitted: "2022-09-14T12:35:16Z",
                    formResponse: { "First Name": "Arthur", "Last Name": "Dent" },
                },
                {
                    id: "660d64fabf6e0a0d4edab981",
                    displayName: "Sample Form",
                    siteId: "62749158efef318abc8d5a0f",
                    workspaceId: "62749158efef318abc8d5a0f",
                    dateSubmitted: "2022-09-14T12:35:16Z",
                    formResponse: { "First Name": "Ford", "Last Name": "Prefect" },
                },
            ],
            pagination: { limit: 25, offset: 0, total: 2 },
        };
        server
            .mockEndpoint()
            .get("/sites/580e63e98c9a982ac9b8b741/form_submissions")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.forms.listSubmissionsBySite("580e63e98c9a982ac9b8b741", {
            elementId: "18259716-3e5a-646a-5f41-5dc4b9405aa0",
        });
        expect(response).toEqual({
            formSubmissions: [
                {
                    id: "6321ca84df3949bfc6752327",
                    displayName: "Sample Form",
                    siteId: "62749158efef318abc8d5a0f",
                    workspaceId: "62749158efef318abc8d5a0f",
                    dateSubmitted: new Date("2022-09-14T12:35:16.000Z"),
                    formResponse: {
                        "First Name": "Arthur",
                        "Last Name": "Dent",
                    },
                },
                {
                    id: "660d64fabf6e0a0d4edab981",
                    displayName: "Sample Form",
                    siteId: "62749158efef318abc8d5a0f",
                    workspaceId: "62749158efef318abc8d5a0f",
                    dateSubmitted: new Date("2022-09-14T12:35:16.000Z"),
                    formResponse: {
                        "First Name": "Ford",
                        "Last Name": "Prefect",
                    },
                },
            ],
            pagination: {
                limit: 25,
                offset: 0,
                total: 2,
            },
        });
    });
});
