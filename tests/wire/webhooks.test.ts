/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { WebflowClient } from "../../src/Client";

describe("Webhooks", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new WebflowClient({
            accessToken: "test",
            environment: {
                base: server.baseUrl,
                dataApi: server.baseUrl,
                contentDeliveryApi: server.baseUrl,
                production: server.baseUrl,
                cdn: server.baseUrl,
            },
        });

        const rawResponseBody = {
            webhooks: [
                {
                    id: "57ca0a9e418c504a6e1acbb6",
                    triggerType: "form_submission",
                    url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                    workspaceId: "4f4e46fd476ea8c507000001",
                    siteId: "562ac0395358780a1f5e6fbd",
                    filter: { name: "Email Form" },
                    lastTriggered: "2023-02-08T23:59:28Z",
                    createdOn: "2016-09-02T23:26:22Z",
                },
                {
                    id: "578d85cce0c47cd2865f4cf2",
                    triggerType: "form_submission",
                    url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                    workspaceId: "4f4e46fd476ea8c507000001",
                    siteId: "562ac0395358780a1f5e6fbd",
                    filter: { name: "Email Form" },
                    lastTriggered: "2023-02-08T23:59:28Z",
                    createdOn: "2016-07-19T01:43:40Z",
                },
                {
                    id: "578d85cce0c47cd2865f4cf3",
                    triggerType: "form_submission",
                    url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                    workspaceId: "4f4e46fd476ea8c507000001",
                    siteId: "562ac0395358780a1f5e6fbd",
                    filter: { name: "Email Form" },
                    lastTriggered: "2023-02-08T23:59:28Z",
                    createdOn: "2016-07-19T01:43:40Z",
                },
            ],
            pagination: { limit: 100, offset: 0, total: 100 },
        };
        server
            .mockEndpoint()
            .get("/sites/580e63e98c9a982ac9b8b741/webhooks")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.webhooks.list("580e63e98c9a982ac9b8b741");
        expect(response).toEqual({
            webhooks: [
                {
                    id: "57ca0a9e418c504a6e1acbb6",
                    triggerType: "form_submission",
                    url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                    workspaceId: "4f4e46fd476ea8c507000001",
                    siteId: "562ac0395358780a1f5e6fbd",
                    filter: {
                        name: "Email Form",
                    },
                    lastTriggered: new Date("2023-02-08T23:59:28.000Z"),
                    createdOn: new Date("2016-09-02T23:26:22.000Z"),
                },
                {
                    id: "578d85cce0c47cd2865f4cf2",
                    triggerType: "form_submission",
                    url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                    workspaceId: "4f4e46fd476ea8c507000001",
                    siteId: "562ac0395358780a1f5e6fbd",
                    filter: {
                        name: "Email Form",
                    },
                    lastTriggered: new Date("2023-02-08T23:59:28.000Z"),
                    createdOn: new Date("2016-07-19T01:43:40.000Z"),
                },
                {
                    id: "578d85cce0c47cd2865f4cf3",
                    triggerType: "form_submission",
                    url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                    workspaceId: "4f4e46fd476ea8c507000001",
                    siteId: "562ac0395358780a1f5e6fbd",
                    filter: {
                        name: "Email Form",
                    },
                    lastTriggered: new Date("2023-02-08T23:59:28.000Z"),
                    createdOn: new Date("2016-07-19T01:43:40.000Z"),
                },
            ],
            pagination: {
                limit: 100,
                offset: 0,
                total: 100,
            },
        });
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new WebflowClient({
            accessToken: "test",
            environment: {
                base: server.baseUrl,
                dataApi: server.baseUrl,
                contentDeliveryApi: server.baseUrl,
                production: server.baseUrl,
                cdn: server.baseUrl,
            },
        });
        const rawRequestBody = {
            id: "582266e0cd48de0f0e3c6d8b",
            triggerType: "form_submission",
            url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
            workspaceId: "4f4e46fd476ea8c507000001",
            siteId: "562ac0395358780a1f5e6fbd",
            lastTriggered: "2023-02-08T23:59:28Z",
            createdOn: "2022-11-08T23:59:28Z",
        };
        const rawResponseBody = {
            id: "582266e0cd48de0f0e3c6d8b",
            triggerType: "form_submission",
            url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
            workspaceId: "4f4e46fd476ea8c507000001",
            siteId: "562ac0395358780a1f5e6fbd",
            lastTriggered: "2023-02-08T23:59:28Z",
            createdOn: "2022-11-08T23:59:28Z",
        };
        server
            .mockEndpoint()
            .post("/sites/580e63e98c9a982ac9b8b741/webhooks")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.webhooks.create("580e63e98c9a982ac9b8b741", {
            id: "582266e0cd48de0f0e3c6d8b",
            triggerType: "form_submission",
            url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
            workspaceId: "4f4e46fd476ea8c507000001",
            siteId: "562ac0395358780a1f5e6fbd",
            lastTriggered: new Date("2023-02-08T23:59:28.000Z"),
            createdOn: new Date("2022-11-08T23:59:28.000Z"),
        });
        expect(response).toEqual({
            id: "582266e0cd48de0f0e3c6d8b",
            triggerType: "form_submission",
            url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
            workspaceId: "4f4e46fd476ea8c507000001",
            siteId: "562ac0395358780a1f5e6fbd",
            lastTriggered: new Date("2023-02-08T23:59:28.000Z"),
            createdOn: new Date("2022-11-08T23:59:28.000Z"),
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new WebflowClient({
            accessToken: "test",
            environment: {
                base: server.baseUrl,
                dataApi: server.baseUrl,
                contentDeliveryApi: server.baseUrl,
                production: server.baseUrl,
                cdn: server.baseUrl,
            },
        });

        const rawResponseBody = {
            id: "582266e0cd48de0f0e3c6d8b",
            triggerType: "form_submission",
            url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
            workspaceId: "4f4e46fd476ea8c507000001",
            siteId: "562ac0395358780a1f5e6fbd",
            lastTriggered: "2023-02-08T23:59:28Z",
            createdOn: "2022-11-08T23:59:28Z",
        };
        server
            .mockEndpoint()
            .get("/webhooks/580e64008c9a982ac9b8b754")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.webhooks.get("580e64008c9a982ac9b8b754");
        expect(response).toEqual({
            id: "582266e0cd48de0f0e3c6d8b",
            triggerType: "form_submission",
            url: "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
            workspaceId: "4f4e46fd476ea8c507000001",
            siteId: "562ac0395358780a1f5e6fbd",
            lastTriggered: new Date("2023-02-08T23:59:28.000Z"),
            createdOn: new Date("2022-11-08T23:59:28.000Z"),
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new WebflowClient({
            accessToken: "test",
            environment: {
                base: server.baseUrl,
                dataApi: server.baseUrl,
                contentDeliveryApi: server.baseUrl,
                production: server.baseUrl,
                cdn: server.baseUrl,
            },
        });

        server.mockEndpoint().delete("/webhooks/580e64008c9a982ac9b8b754").respondWith().statusCode(200).build();

        const response = await client.webhooks.delete("580e64008c9a982ac9b8b754");
        expect(response).toEqual(undefined);
    });
});
